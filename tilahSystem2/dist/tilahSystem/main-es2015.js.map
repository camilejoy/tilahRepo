{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/dashboard/dashboard.component.html","./src/app/history/history.component.html","./src/app/login/login.component.html","./src/app/logs/logs.component.html","./src/app/page-not-found/page-not-found.component.html","./src/app/pos/pos.component.html","./src/app/seed/seed.component.html","./src/app/user/user.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth.service.ts","./src/app/dashboard/dashboard.component.scss","./src/app/dashboard/dashboard.component.ts","./src/app/history.service.ts","./src/app/history.ts","./src/app/history/history.component.scss","./src/app/history/history.component.ts","./src/app/login/login.component.scss","./src/app/login/login.component.ts","./src/app/logs/logs.component.scss","./src/app/logs/logs.component.ts","./src/app/order.service.ts","./src/app/page-not-found/page-not-found.component.scss","./src/app/page-not-found/page-not-found.component.ts","./src/app/pos/pos.component.scss","./src/app/pos/pos.component.ts","./src/app/sale.service.ts","./src/app/sale.ts","./src/app/seed.service.ts","./src/app/seed.ts","./src/app/seed/seed.component.css","./src/app/seed/seed.component.ts","./src/app/token-interceptor.service.ts","./src/app/user.service.ts","./src/app/user.ts","./src/app/user/user.component.css","./src/app/user/user.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<router-outlet></router-outlet>\"","export default \"<div class=\\\"container-fluid p-0 m-0\\\">\\r\\n    <mdb-navbar SideClass=\\\"navbar navbar-1 navbar-light bg-red-style text-light lighten-2\\\" [containerInside]=\\\"false\\\">\\r\\n        <mdb-navbar-brand>\\r\\n            <a class=\\\"navbar-brand link-unstyled text-light brand-style mb-1\\\" routerLink=\\\"/dashboard\\\">\\r\\n                <h5 class=\\\"mb-0 pb-0\\\">TILAH SEED CENTER</h5><br>\\r\\n                <small>Maligaya Branch</small>\\r\\n            </a>\\r\\n        </mdb-navbar-brand>\\r\\n        <links>\\r\\n            <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a routerLink=\\\"/seed\\\" class=\\\"nav-link link-unstyled text-light\\\">Seed<span class=\\\"sr-only\\\">(current)</span></a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a routerLink=\\\"/user\\\" class=\\\"nav-link link-unstyled text-light\\\" [hidden]=\\\"role\\\">User</a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a (click)=\\\"logoutModal(logout)\\\" class=\\\"nav-link link-unstyled text-light\\\">Logout</a>\\r\\n                </li> \\r\\n            </ul>\\r\\n        </links>\\r\\n    </mdb-navbar>\\r\\n    <div class=\\\"row mx-0\\\">\\r\\n        <div class=\\\"col-lg-8 mx-auto\\\">\\r\\n            <h4 class=\\\"bg-header text-light p-3 text-center my-2 shadow\\\">Seed Sales Report</h4>\\r\\n            <form (submit)=\\\"setChartData()\\\">\\r\\n                <div class=\\\"my-2\\\">\\r\\n                    <label>Choose category</label>\\r\\n                    <select name=\\\"cat\\\" [(ngModel)]=\\\"cat\\\" class=\\\"form-control\\\">\\r\\n                        <option selected=\\\"selected\\\" disabled>Choose Category</option>\\r\\n                        <option *ngFor=\\\"let cat of category\\\" [ngValue]=\\\"cat\\\">{{cat}}</option>\\r\\n                    </select>\\r\\n                    <div *ngIf=\\\"cat != ''\\\">\\r\\n                        <div *ngIf=\\\"cat == 'Seed Name'\\\" class=\\\"my-2 row\\\">\\r\\n                            <div class=\\\"col-lg-6\\\">\\r\\n                                <select name=\\\"seedname\\\" [(ngModel)]=\\\"seedname\\\" class=\\\"form-control\\\">\\r\\n                                    <option selected=\\\"selected\\\" disabled>Choose Seed Name</option>\\r\\n                                    <option *ngFor=\\\"let s of seeds\\\" [ngValue]=\\\"s.name\\\">{{s.name}}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-lg-6\\\">\\r\\n                                <select name=\\\"seedname1\\\" [(ngModel)]=\\\"seedname1\\\" class=\\\"form-control\\\">\\r\\n                                    <option selected=\\\"selected\\\" disabled>Choose Seed Name</option>\\r\\n                                    <option *ngFor=\\\"let s of seeds\\\" [ngValue]=\\\"s.name\\\">{{s.name}}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"cat == 'Seed Variety'\\\" class=\\\"my-2 row\\\">\\r\\n                            <div class=\\\"col-lg-6\\\">\\r\\n                                <select name=\\\"seedvariety\\\" [(ngModel)]=\\\"seedvariety\\\" class=\\\"form-control\\\">\\r\\n                                    <option selected=\\\"selected\\\" disabled>Choose Variety</option>\\r\\n                                    <option *ngFor=\\\"let v of variety\\\" [ngValue]=\\\"v\\\">{{v|titlecase}}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-lg-6\\\">\\r\\n                                <select name=\\\"seedvariety1\\\" [(ngModel)]=\\\"seedvariety1\\\" class=\\\"form-control\\\">\\r\\n                                    <option selected=\\\"selected\\\" disabled>Choose Variety</option>\\r\\n                                    <option *ngFor=\\\"let v of variety\\\" [ngValue]=\\\"v\\\">{{v|titlecase}}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"cat == 'Seed Classification'\\\" class=\\\"my-2 row\\\">\\r\\n                            <div class=\\\"col-lg-6\\\">\\r\\n                                <select name=\\\"seedclass\\\" [(ngModel)]=\\\"seedclass\\\" class=\\\"form-control\\\">\\r\\n                                    <option selected=\\\"selected\\\" disabled>Choose Classification</option>\\r\\n                                    <option *ngFor=\\\"let c of classification\\\" [ngValue]=\\\"c\\\">{{c|titlecase}}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-lg-6\\\">\\r\\n                                <select name=\\\"seedclass1\\\" [(ngModel)]=\\\"seedclass1\\\" class=\\\"form-control\\\">\\r\\n                                    <option selected=\\\"selected\\\" disabled>Choose Classification</option>\\r\\n                                    <option *ngFor=\\\"let c of classification\\\" [ngValue]=\\\"c\\\">{{c|titlecase}}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex justify-content-center\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary\\\">Submit</button>\\r\\n                </div>\\r\\n            </form> \\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row mx-0\\\">\\r\\n        <div class=\\\"col-lg-8 mx-auto my-2\\\">\\r\\n            <div style=\\\"display: block\\\">\\r\\n                <canvas mdbChart\\r\\n                    [chartType]=\\\"chartType\\\"\\r\\n                    [datasets]=\\\"chartDatasets\\\"\\r\\n                    [labels]=\\\"chartLabels\\\"\\r\\n                    [colors]=\\\"chartColors\\\"\\r\\n                    [options]=\\\"chartOptions\\\"\\r\\n                    [legend]=\\\"true\\\"\\r\\n                    (chartHover)=\\\"chartHovered($event)\\\"\\r\\n                    (chartClick)=\\\"chartClicked($event)\\\">\\r\\n                </canvas>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- total Sales: {{totalSales}}\\r\\n<br>\\r\\nNumber of Seed Sold: {{totalCount}} -->\\r\\n\\r\\n<ng-template #logout let-modal>\\r\\n    <div class=\\\"modal-header bg-danger text-light\\\">\\r\\n        <h5 class=\\\"modal-title\\\">Are you sure you want to Logout?</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body d-flex justify-content-center\\\">\\r\\n        <button type=\\\"button\\\" (click)=\\\"clickLogout(modal.dismiss())\\\" class=\\\"btn btn-danger hvr-buzz\\\">YES</button>\\r\\n        <button type=\\\"button\\\" (click)=\\\"modal.dismiss()\\\" class=\\\"btn btn-light\\\">Cancel</button>\\r\\n    </div>\\r\\n</ng-template>\"","export default \"<p>history works!</p>\\n\"","export default \"<div class=\\\"container-fluid m-0 p-0\\\">\\n    <div class=\\\"row m-0 p-0\\\">\\n        <div class=\\\"col-lg-6 bg-red px-0 d-flex justify-content-end\\\">\\n            <div class=\\\"col-lg-6 login-container-left align-self-center\\\">\\n                <div class=\\\"login-style-left py-3 d-flex justify-content-center flex-column\\\">\\n                    <img src=\\\"\\\" class=\\\"logo align-self-center\\\">\\n                    <h4 class=\\\"text-light text-center\\\">TILAH - Maligaya Branch</h4>\\n                    <h6 class=\\\"text-light text-center\\\">INVENTORY SYSTEM</h6>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-6 white px-0 d-flex justify-content-start\\\">\\n            <div class=\\\"col-lg-6 login-container-right align-self-center\\\">\\n                <div class=\\\"login-style-right p-3\\\">\\n                    <h3 class=\\\"text-center mb-3 text-uppercase text-spacing text-red\\\">Login</h3>\\n                    <hr class=\\\"hr-style\\\">\\n                    <form [formGroup]=\\\"myform\\\" class=\\\"\\\">\\n                        <div class=\\\"md-form\\\">\\n                            <input mdbInput mdbValidate type=\\\"text\\\" formControlName=\\\"username\\\" name=\\\"userName\\\" [(ngModel)]=\\\"userName\\\" required\\n                                id=\\\"uname\\\" class=\\\"form-control\\\">\\n                                <label for=\\\"uname\\\">Type your username</label>\\n                                <mdb-error *ngIf=\\\"username.invalid && (username.dirty || username.touched)\\\">**Input Invalid</mdb-error>\\n                                <!-- <mdb-success *ngIf=\\\"username.valid && (username.dirty || username.touched)\\\">Input Valid</mdb-success> -->\\n                        </div>\\n                        <div class=\\\"md-form\\\">\\n                            <input mdbInput mdbValidate type=\\\"password\\\" formControlName=\\\"password\\\" name=\\\"passWord\\\" [(ngModel)]=\\\"passWord\\\" required\\n                                id=\\\"pword\\\" minlength=\\\"6\\\" class=\\\"form-control\\\">\\n                                <label for=\\\"pword\\\">Type your password</label>\\n                                <mdb-error *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\">**Input Invalid</mdb-error>\\n                                <!-- <mdb-success *ngIf=\\\"password.valid && (password.dirty || password.touched)\\\">Input Valid</mdb-success> -->\\n                        </div>\\n                        <div class=\\\"md-form d-flex justify-content-center\\\">\\n                            <button mdbBtn class=\\\"btn btn-outline-danger btn-sm my-2 hvr-grow\\\" (click)=\\\"clickLogin(deletedModal)\\\">Log In</button>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<ng-template #deletedModal let-modal>\\n    <div class=\\\"modal-header bg-success py-4\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body d-flex justify-content-center py-3\\\" [ngSwitch]=\\\"action\\\">\\n        <h5 class=\\\"modal-title\\\" *ngSwitchCase=\\\"'user'\\\">Logged In! Welcome User!</h5>\\n        <h5 class=\\\"modal-title\\\" *ngSwitchCase=\\\"'admin'\\\">Logged In! Welcome Admin!</h5>\\n        <h5 class=\\\"modal-title\\\" *ngSwitchCase=\\\"'invalid'\\\">Invalid or Incorrect Credentials!</h5>\\n        <div class=\\\"modal-body d-flex justify-content-center\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"action == 'admin'\\\" (click)=\\\"clickOk('dashboard'); modal.dismiss()\\\">OK</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"action == 'user'\\\" (click)=\\\"clickOk('pointOfSale'); modal.dismiss()\\\">OK</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"action == 'invalid'\\\" (click)=\\\"clickOk('login'); modal.dismiss()\\\">OK</button>\\n        </div>\\n    </div>\\n</ng-template>\"","export default \"<div class=\\\"container-fluid p-0 m-0\\\">\\n    <mdb-navbar SideClass=\\\"navbar navbar-1 navbar-light bg-red-style text-light lighten-2\\\" [containerInside]=\\\"false\\\">\\n        <mdb-navbar-brand>\\n            <a class=\\\"navbar-brand link-unstyled text-light brand-style mb-1\\\" routerLink=\\\"/dashboard\\\">\\n                <h5 class=\\\"mb-0 pb-0\\\">TILAH SEED CENTER</h5><br>\\n                <small>Maligaya Branch</small>\\n            </a>\\n            <!-- <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n                <span class=\\\"navbar-toggler-icon bg-light\\\"></span>\\n            </button> -->\\n        </mdb-navbar-brand>\\n        <links>\\n            <ul class=\\\"navbar-nav mr-auto\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a routerLink=\\\"/dashboard\\\" class=\\\"nav-link link-unstyled text-light\\\" [hidden]=\\\"role\\\">Dashboard<span class=\\\"sr-only\\\">(current)</span></a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a routerLink=\\\"/seed\\\" class=\\\"nav-link link-unstyled text-light\\\">Seed<span class=\\\"sr-only\\\">(current)</span></a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a routerLink=\\\"/user\\\" class=\\\"nav-link link-unstyled text-light\\\" [hidden]=\\\"role\\\">User</a>\\n                </li>\\n                <!-- <li class=\\\"nav-item\\\">\\n                    <a (click)=\\\"logoutModal(logout)\\\" class=\\\"nav-link link-unstyled text-light\\\">Logout</a>\\n                </li>  -->\\n            </ul>\\n            <ul class=\\\"navbar-nav\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a (click)=\\\"logoutModal(logout)\\\" class=\\\"nav-link link-unstyled text-light\\\">Logout</a>\\n                </li>  \\n            </ul>\\n        </links>\\n    </mdb-navbar>\\n    <div class=\\\"row m-0 mb-2\\\">\\n        <div class=\\\"col-10 offset-1 p-3 shadow mt-4\\\">\\n        <div class=\\\"row p-3\\\">\\n            <div class=\\\"col-2 d-flex justify-content-start\\\">\\n            \\n            </div>\\n            <div class=\\\"col-8 d-flex justify-content-center\\\">\\n            <h3 class=\\\"text-spacing text-uppercase hvr-float\\\">History</h3>\\n            </div>\\n            <div class=\\\"col-2 d-flex justify-content-end\\\">\\n                \\n            </div>\\n        </div>\\n        <div class=\\\"table-style\\\">\\n            <table mdbTable #tableEl=\\\"mdbTable\\\" class=\\\"table z-depth-1\\\" hover=\\\"true\\\">\\n\\n                <thead>\\n                    <tr class=\\\"thead-light sticky-top\\\">\\n                        <th *ngFor=\\\"let head of headElements; let i = index\\\" scope=\\\"col\\\">{{head}}</th>\\n                    </tr>\\n                </thead>\\n\\n                <tbody>\\n                    <tr *ngFor=\\\"let log of logs; let i = index\\\">\\n                        <th *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\"\\n                        scope=\\\"row\\\">{{log.userName}}</th>\\n                        <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">{{log.seedname}}</td>\\n                        <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">{{log.action}}</td>\\n                        <td *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">{{log.dateModified | date:'mediumDate'}}</td>\\n                    </tr>\\n                </tbody>\\n\\n                <tfoot class=\\\"grey lighten-5 w-100\\\">\\n                    <tr>\\n                        <td colspan=\\\"12\\\">\\n                            <mdb-table-pagination [tableEl]=\\\"tableEl\\\" [searchDataSource]=\\\"logs\\\"></mdb-table-pagination>\\n                        </td>\\n                    </tr>\\n                </tfoot>\\n            </table>\\n        </div>\\n    </div>\\n</div>\\n<footer class=\\\"footer fixed-bottom\\\"></footer>\\n</div>\\n<ng-template #logout let-modal>\\n    <div class=\\\"modal-header bg-danger text-light\\\">\\n        <h5 class=\\\"modal-title\\\">Are you sure you want to Logout?</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body d-flex justify-content-center\\\">\\n        <button type=\\\"button\\\" (click)=\\\"clickLogout(modal.dismiss())\\\" class=\\\"btn btn-danger hvr-buzz\\\">YES</button>\\n        <button type=\\\"button\\\" (click)=\\\"modal.dismiss()\\\" class=\\\"btn btn-light\\\">Cancel</button>\\n    </div>\\n  </ng-template>\\n\"","export default \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12 py-5 my-5\\\">\\n            <div class=\\\"col-lg-5 mx-auto bg-danger text-light d-flex justify-content-center p-3 hvr-grow\\\">\\n                <h2 class=\\\"\\\">Page Not Found!!</h2>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"container-fluid p-0 m-0\\\">\\n  <mdb-navbar SideClass=\\\"navbar navbar-1 navbar-light bg-red-style text-light lighten-2\\\" [containerInside]=\\\"false\\\">\\n    <mdb-navbar-brand>\\n      <a class=\\\"navbar-brand link-unstyled text-light brand-style mb-1\\\" routerLink=\\\"/\\\">\\n        <h5 class=\\\"mb-0 pb-0\\\">TILAH SEED CENTER</h5><br>\\n        <small>Maligaya Branch</small>\\n      </a>\\n    </mdb-navbar-brand>\\n    <links>\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n          <!-- <li class=\\\"nav-item active\\\">\\n              <a routerLink=\\\"/dashboard\\\" class=\\\"nav-link link-unstyled text-light\\\" [hidden]=\\\"role\\\">Dashboard<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item active\\\">\\n              <a routerLink=\\\"/seed\\\" class=\\\"nav-link link-unstyled text-light\\\">Seed<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"/user\\\" class=\\\"nav-link link-unstyled text-light\\\" [hidden]=\\\"role\\\">User</a>\\n          </li> -->\\n          <li class=\\\"nav-item\\\">\\n              <a (click)=\\\"logoutModal(logout)\\\" class=\\\"nav-link link-unstyled text-light\\\">Logout</a>\\n          </li> \\n      </ul>\\n  </links>\\n</mdb-navbar>\\n  <div class=\\\"row mx-0 p-4\\\">\\n    <div class=\\\"col-lg-4 col-sm-12\\\">\\n        <h3 class=\\\"\\\">Select Item Here</h3>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"table-responsive overflow-y pos-table-style\\\">\\n            <table class=\\\"table\\\">\\n              <tr *ngFor=\\\"let item of items\\\">\\n                <td class=\\\"mx-0 my-1 p-0\\\">\\n                  <button (click)=\\\"onClick(item._id)\\\" color=\\\"#\\\" class=\\\"text-left btn-sm\\\" block=\\\"true\\\" mdbBtn type=\\\"button\\\" rounded=\\\"true\\\" mdbWavesEffect><h5>{{item.name}}</h5></button>\\n                </td>\\n              </tr>\\n            </table>\\n          </div>\\n          <div class=\\\"col-12 px-0 mt-4 pt-3\\\">\\n            <a routerLink=\\\"/seed\\\"><button class=\\\"btn-sm\\\" mdbBtn block=\\\"true\\\" type=\\\"button\\\" rounded=\\\"true\\\" mdbWavesEffect><h4>Manage Seeds</h4></button></a>\\n          </div>\\n        </div>          \\n    </div>\\n    <div class=\\\"col-lg-8 col-sm-12\\\">\\n      <h3 class=\\\"\\\">Order Summary</h3>\\n      <div class=\\\"table-responsive overflow-y pos-table-style\\\">\\n          <table mdbTable class=\\\"table\\\">\\n            <tr class=\\\"thead-light sticky-top\\\">\\n              <th *ngFor=\\\"let head of headElements\\\" scope=\\\"col\\\" class=\\\"\\\">{{head}}</th>\\n            </tr>\\n            <tr mdbTableCol *ngFor=\\\"let order of orders\\\">\\n              <th scope=\\\"row\\\">{{order.name}}</th>\\n              <td>{{order.price}}</td>\\n              <td>{{order.quantity}}</td>\\n              <td>{{order.amount}}</td>\\n            </tr>\\n        </table>\\n      </div>\\n      <div class=\\\"row px-1\\\">\\n        <div class=\\\"col-2\\\"><h5 class=\\\"font-weight-bold\\\">Total:</h5></div>\\n        <div class=\\\"col-7\\\"></div>\\n        <div class=\\\"col-3\\\"><h5 class=\\\"font-weight-bold\\\">{{total}}</h5></div>\\n      </div>\\n      <div class=\\\"row mt-1 pt-1\\\">\\n        <div class=\\\"col-lg-6 col-sm-12\\\">\\n          <button (click)=\\\"clickClear()\\\" class=\\\"btn-sm\\\" mdbBtn block=\\\"true\\\" type=\\\"button\\\" mdbWavesEffect><h4>Clear order</h4></button>\\n        </div>\\n        <div class=\\\"col-lg-6 col-sm-12\\\" *ngIf=\\\"orders.length != 0; else elseBlock\\\">\\n            <button class=\\\"btn-sm\\\" mdbBtn block=\\\"true\\\" type=\\\"button\\\" (click)=\\\"basicModal.show()\\\" mdbWavesEffect><h4>PAY</h4></button>\\n        </div>\\n        <ng-template #elseBlock>\\n          <div class=\\\"col-lg-6 col-sm-12\\\">\\n            <button class=\\\"btn-sm\\\" mdbBtn block=\\\"true\\\" type=\\\"button\\\" mdbWavesEffect disabled><h4>PAY</h4></button>\\n          </div>\\n        </ng-template>\\n      </div>\\n  </div>\\n  <footer class=\\\"footer fixed-bottom\\\"></footer>\\n</div>\\n\\n<div mdbModal #basicModal=\\\"mdbModal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myBasicModalLabel\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog \\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header bg-primary text-light\\\">\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"basicModal.hide()\\\">\\n          <span aria-hidden=\\\"true\\\">×</span>\\n        </button>\\n        <h4 class=\\\"modal-title w-100\\\" id=\\\"myModalLabel\\\">Order Summary</h4>\\n      </div>\\n      <div class=\\\"modal-body overflow-y\\\">\\n        <div class=\\\"row\\\" *ngFor=\\\"let order of orders\\\">\\n          <div class=\\\"col-3\\\">{{order.name}}</div>\\n          <div class=\\\"col-2\\\">x {{order.quantity}}</div>\\n          <div class=\\\"col-4\\\">@ {{order.price}}</div>\\n          <div class=\\\"col-3\\\">{{order.amount}}</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-8\\\"><h3>Total: </h3></div>\\n          <div class=\\\"col-4\\\"><h3>{{total}}</h3></div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-8\\\"><h3>Enter Payment: </h3></div>\\n          <div class=\\\"col-4\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"payment\\\" [(ngModel)]=\\\"change\\\" required>\\n          </div>\\n        </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-8\\\"><h3>Change: </h3></div>\\n            <div class=\\\"col-4\\\"><h3>{{change - total}}</h3></div>\\n          </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\" *ngIf=\\\"(change - total) >= 0; else eb\\\">\\n        <button type=\\\"button\\\" mdbBtn color=\\\"primary\\\" class=\\\"relative waves-light form-control btn-sm\\\" (click)=\\\"payModal(pay); basicModal.hide()\\\" mdbWavesEffect>PAY</button>\\n      </div>\\n      <ng-template #eb>\\n        <button type=\\\"button\\\" mdbBtn color=\\\"primary\\\" class=\\\"mx-0 waves-light form-control btn-sm\\\" (click)=\\\"clickPay()\\\" mdbWavesEffect disabled>PAY</button>\\n      </ng-template>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<ng-template #logout let-modal>\\n  <div class=\\\"modal-header bg-danger text-light\\\">\\n      <h5 class=\\\"modal-title\\\">Are you sure you want to Logout?</h5>\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n  </div>\\n  <div class=\\\"modal-body d-flex justify-content-center\\\">\\n      <button type=\\\"button\\\" (click)=\\\"clickLogout(modal.dismiss())\\\" class=\\\"btn btn-danger hvr-buzz\\\">YES</button>\\n      <button type=\\\"button\\\" (click)=\\\"modal.dismiss()\\\" class=\\\"btn btn-light\\\">Cancel</button>\\n  </div>\\n</ng-template>\\n\\n<ng-template #pay let-modal>\\n    <div class=\\\"modal-header bg-success text-light d-flex justify-content-center\\\">\\n        <h5 class=\\\"modal-title\\\">PAID!</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n  <div class=\\\"modal-body d-flex justify-content-center\\\">\\n    <button type=\\\"button\\\" (click)=\\\"clickPay(modal.dismiss())\\\" class=\\\"btn btn-sm btn-success hvr-buzz\\\">OK</button>\\n  </div>\\n</ng-template>\"","export default \"<!---------------------------------SEED------------------------------------>\\n<div class=\\\"container-fluid p-0 m-0\\\">\\n    <mdb-navbar SideClass=\\\"navbar navbar-1 navbar-light bg-red-style text-light lighten-2\\\" [containerInside]=\\\"false\\\">\\n        <mdb-navbar-brand>\\n            <div *ngIf=\\\"role; else elseBlock\\\">\\n                <a class=\\\"navbar-brand link-unstyled text-light brand-style mb-1\\\" routerLink=\\\"/pointOfSale\\\">\\n                    <h5 class=\\\"mb-0 pb-0\\\">TILAH SEED CENTER</h5><br>\\n                    <small>Maligaya Branch</small>\\n                </a>\\n            </div>\\n            <ng-template #elseBlock>\\n                <a class=\\\"navbar-brand link-unstyled text-light brand-style mb-1\\\" routerLink=\\\"/dashboard\\\">\\n                    <h5 class=\\\"mb-0 pb-0\\\">TILAH SEED CENTER</h5><br>\\n                    <small>Maligaya Branch</small>\\n                </a>\\n            </ng-template>\\n        </mdb-navbar-brand>\\n        <links>\\n            <ul class=\\\"navbar-nav mr-auto\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a routerLink=\\\"/dashboard\\\" class=\\\"nav-link link-unstyled text-light\\\" [hidden]=\\\"role\\\">Dashboard<span class=\\\"sr-only\\\">(current)</span></a>\\n                </li>\\n                <li class=\\\"nav-item active\\\">\\n                    <a routerLink=\\\"/seed\\\" class=\\\"nav-link link-unstyled text-light\\\">Seed<span class=\\\"sr-only\\\">(current)</span></a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a routerLink=\\\"/user\\\" class=\\\"nav-link link-unstyled text-light\\\" [hidden]=\\\"role\\\">User</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a (click)=\\\"logoutModal(logout)\\\" class=\\\"nav-link link-unstyled text-light\\\">Logout</a>\\n                </li> \\n            </ul>\\n        </links>\\n    </mdb-navbar>\\n    <div class=\\\"row m-0\\\">\\n        <div class=\\\"col-10 offset-1 p-3 shadow mt-4\\\">\\n        <div class=\\\"row pb-3\\\"> \\n            <div class=\\\"col-lg-2 col-sm-12 d-flex justify-content-center\\\">\\n            <button class=\\\"btn btn-outline-info btn-sm hvr-grow\\\" (click)=\\\"addSeedModal(addseed)\\\">Add New Seed\\n                <span><i class=\\\"fa fa-plus\\\"></i></span>\\n            </button>\\n            </div>\\n            <div class=\\\"col-lg-8 col-sm-12 d-flex justify-content-center\\\">\\n            <h3 class=\\\"text-spacing text-uppercase hvr-float text-center\\\">Seed Collection</h3>\\n            </div>\\n            <div class=\\\"col-lg-2 col-sm-12 d-flex justify-content-center\\\">\\n                <a routerLink=\\\"/logs\\\"><button class=\\\"btn btn-outline-info btn-sm hvr-grow\\\" [hidden]=\\\"role\\\">History\\n                    <span><i class=\\\"fa fa-download\\\"></i></span>\\n                </button></a>\\n            </div>\\n        </div>\\n        <div class=\\\"table-sm-style table-responsive\\\">\\n            <table mdbTable #tableEl=\\\"mdbTable\\\" class=\\\"table z-depth-1\\\" hover=\\\"true\\\">\\n                <thead>\\n                    <tr class=\\\"thead-light sticky-top\\\">\\n                        <th *ngFor=\\\"let head of headElements; let i = index\\\" scope=\\\"col\\\">{{head}}</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let s of list; let i = index\\\">\\n                        <th class=\\\"py-1\\\" *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\"\\n                        scope=\\\"row\\\">{{s.name}}</th>\\n                        <td class=\\\"py-1\\\" *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">{{s.variety|titlecase}}</td>\\n                        <td class=\\\"py-1\\\" *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">{{s.classification|titlecase}}</td>\\n                        <td class=\\\"py-1\\\" *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">{{s.number_of_days}}</td>\\n                        <td class=\\\"py-1\\\" *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">{{s.stocks}}</td>\\n                        <td class=\\\"py-1\\\" *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n                            <button class=\\\"btn btn-outline-primary btn-sm mr-3 hvr-grow\\\" (click)=\\\"viewSeedModal(viewseed, s._id, i)\\\">View\\n                            <!-- <span><i class=\\\"fa fa-edit\\\"></i></span> --></button>\\n                            <button class=\\\"btn btn-outline-warning btn-sm mr-3 hvr-grow\\\" (click)=\\\"editSeedModal(editseed, s._id, i)\\\">Edit\\n                            <span><i class=\\\"fa fa-edit\\\"></i></span></button>\\n                            <button class=\\\"btn btn-outline-danger btn-sm hvr-buzz\\\" (click)=\\\"deleteModal(del, s._id)\\\">Delete\\n                            <span><i class=\\\"fa fa-trash\\\"></i></span></button>   \\n                        </td>\\n                    </tr>\\n                </tbody>\\n\\n                <tfoot class=\\\"grey lighten-5 w-100\\\">\\n                    <tr>\\n                        <td colspan=\\\"12\\\" class=\\\"p-0\\\">\\n                            <mdb-table-pagination [tableEl]=\\\"tableEl\\\" [searchDataSource]=\\\"users\\\"></mdb-table-pagination>\\n                        </td>\\n                    </tr>\\n                </tfoot>\\n            </table>\\n        </div>\\n        </div>\\n    </div>\\n    <footer class=\\\"footer fixed-bottom\\\"></footer>\\n</div>\\n    \\n<ng-template #viewseed let-modal>\\n    <div class=\\\"modal-header bg-primary text-light\\\">\\n        <h4 class=\\\"modal-title\\\">View Seed</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-4\\\">\\n                <img src=\\\"\\\" alt=\\\"\\\" class=\\\"view-img-style\\\">\\n            </div>\\n            <div class=\\\"col-8\\\">\\n                <table>\\n                    <tr>\\n                        <td colspan=\\\"2\\\"><h5 class=\\\"font-weight-bold\\\">{{seed.name}}</h5></td>\\n                    </tr>\\n                    <tr>\\n                        <td>Variety</td>\\n                        <td class=\\\"pl-3\\\">{{seed.variety|titlecase}}</td>\\n                    </tr>\\n                    <tr>\\n                        <td>Classification</td>\\n                        <td class=\\\"pl-3\\\">{{seed.classification|titlecase}}</td>\\n                    </tr>\\n                    <tr>\\n                        <td>Description</td>\\n                        <td class=\\\"pl-3\\\">{{seed.description}}</td>\\n                    </tr>\\n                    <tr>\\n                        <td>Price</td>\\n                        <td class=\\\"pl-3\\\">{{seed.price}}</td>\\n                    </tr>\\n                    <tr>\\n                        <td>Days of Maturity</td>\\n                        <td class=\\\"pl-3\\\">{{seed.number_of_days}}</td>\\n                    </tr>\\n                    <tr>\\n                        <td>Stocks</td>\\n                        <td class=\\\"pl-3\\\">{{seed.stocks}}</td>\\n                    </tr>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\\n<ng-template #addseed let-modal>\\n    <div class=\\\"modal-header bg-primary text-light\\\">\\n    <h4 class=\\\"modal-title\\\">Add New Seed</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click'); myform.reset()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"myform\\\">\\n            <div class=\\\"form-group mb-1\\\">\\n                <label for=\\\"seedName\\\">Seed Name</label>\\n                <input type=\\\"text\\\" [ngClass]=\\\"{\\n                    'border border-danger': seedname.invalid && (seedname.dirty || seedname.touched),\\n                    'border border-success': seedname.valid && (seedname.dirty || seedname.touched)\\n                }\\\" class=\\\"form-control\\\" id=\\\"seedName\\\" formControlName=\\\"seedname\\\" name=\\\"seedName\\\" [(ngModel)]=\\\"seedName\\\">\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"seedname.errors && (seedname.dirty || seedname.touched)\\\">\\n                    <small *ngIf=\\\"seedname.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                </div>\\n            </div>\\n            <div class=\\\"form-row mb-1\\\">\\n                <div class=\\\"form-group col-6 mb-1\\\">\\n                    <label for=\\\"seedVariety\\\">Variety</label>\\n                    <select id=\\\"seedVariety\\\" [ngClass]=\\\"{\\n                        'border border-danger': seedVariety.invalid && (seedVariety.dirty || seedVariety.touched),\\n                        'border border-success': seedVariety.valid && (seedVariety.dirty || seedVariety.touched)\\n                    }\\\" class=\\\"form-control\\\" formControlName=\\\"seedVariety\\\" name=\\\"seed_variety\\\" [(ngModel)]=\\\"seed_variety\\\" required> \\n                        <option selected=\\\"selected\\\" disabled>Choose...</option>\\n                        <option *ngFor=\\\"let v of variety\\\" [ngValue]=\\\"v\\\">{{v|titlecase}}</option>\\n                    </select>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"seedVariety.errors && (seedVariety.dirty || seedVariety.touched)\\\">\\n                        <small *ngIf=\\\"seedVariety.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group col-6 mb-1\\\">\\n                    <label for=\\\"seedClassification\\\">Classification</label>\\n                    <select id=\\\"seedClassification\\\" [ngClass]=\\\"{\\n                        'border border-danger': seedClassification.invalid && (seedClassification.dirty || seedClassification.touched),\\n                        'border border-success': seedClassification.valid && (seedClassification.dirty || seedClassification.touched)\\n                    }\\\" class=\\\"form-control\\\" formControlName=\\\"seedClassification\\\" name=\\\"seed_classification\\\" [(ngModel)]=\\\"seed_classification\\\" aria-required=\\\"\\\">\\n                        <option selected=\\\"selected\\\" disabled>Choose...</option>\\n                        <option *ngFor=\\\"let c of classification\\\" [ngValue]=\\\"c\\\">{{c|titlecase}}</option>\\n                    </select>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"seedClassification.errors && (seedClassification.dirty || seedClassification.touched)\\\">\\n                        <small *ngIf=\\\"seedClassification.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                    </div>\\n                </div>\\n            </div>\\n            \\n            <div class=\\\"form-group mb-1\\\">\\n                <label for=\\\"seedDescription\\\">Description</label>\\n                <input type=\\\"text\\\" [ngClass]=\\\"{\\n                    'border border-danger': seedDescription.invalid && (seedDescription.dirty || seedDescription.touched),\\n                    'border border-success': seedDescription.valid && (seedDescription.dirty || seedDescription.touched)\\n                }\\\" class=\\\"form-control\\\" id=\\\"seedDescription\\\" formControlName=\\\"seedDescription\\\" name=\\\"description\\\" [(ngModel)]=\\\"description\\\" required>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"seedDescription.errors && (seedDescription.dirty || seedDescription.touched)\\\">\\n                    <small *ngIf=\\\"seedDescription.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group mb-1\\\">\\n                <label for=\\\"seedPrice\\\">Price</label>\\n                <input type=\\\"text\\\" [ngClass]=\\\"{\\n                    'border border-danger': seedPrice.invalid && (seedPrice.dirty || seedPrice.touched),\\n                    'border border-success': seedPrice.valid && (seedPrice.dirty || seedPrice.touched)\\n                }\\\" class=\\\"form-control\\\" id=\\\"seedPrice\\\" formControlName=\\\"seedPrice\\\" name=\\\"price\\\" [(ngModel)]=\\\"price\\\" required>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"seedPrice.errors && (seedPrice.dirty || seedPrice.touched)\\\">\\n                    <small *ngIf=\\\"seedPrice.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                </div>\\n            </div>\\n            <div class=\\\"form-row mb-1\\\">\\n                <div class=\\\"form-group col-6 mb-1\\\">\\n                    <label for=\\\"seedMaturity\\\">Days of Maturity</label>\\n                    <input type=\\\"number\\\" [ngClass]=\\\"{\\n                        'border border-danger': seedMaturity.invalid && (seedMaturity.dirty || seedMaturity.touched),\\n                        'border border-success': seedMaturity.valid && (seedMaturity.dirty || seedMaturity.touched)\\n                    }\\\" class=\\\"form-control\\\" id=\\\"seedMaturity\\\" formControlName=\\\"seedMaturity\\\" name=\\\"maturity\\\" [(ngModel)]=\\\"maturity\\\" required>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"seedMaturity.errors && (seedMaturity.dirty || seedMaturity.touched)\\\">\\n                        <small *ngIf=\\\"seedMaturity.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group col-6 mb-1\\\">\\n                    <label for=\\\"seedStocks\\\">Stocks</label>\\n                    <input type=\\\"number\\\" [ngClass]=\\\"{\\n                        'border border-danger': seedStocks.invalid && (seedStocks.dirty || seedStocks.touched),\\n                        'border border-success': seedStocks.valid && (seedStocks.dirty || seedStocks.touched)\\n                    }\\\" class=\\\"form-control\\\" id=\\\"seedStocks\\\" formControlName=\\\"seedStocks\\\" name=\\\"stock\\\" [(ngModel)]=\\\"stock\\\">\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"seedStocks.errors && (seedStocks.dirty || seedStocks.touched)\\\">\\n                        <small *ngIf=\\\"seedStocks.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                    </div>\\n                </div>\\n            </div>\\n            <button [hidden]=\\\"!myform.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary form-control hvr-grow\\\" (click)=\\\"addSeed(deletedModal)\\\">Add</button>\\n        </form>\\n    </div>\\n</ng-template>\\n\\n<ng-template #editseed let-modal>\\n    <div class=\\\"modal-header bg-warning text-light\\\">\\n        <h4 class=\\\"modal-title\\\">Edit Seed</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"myform\\\">\\n            <div class=\\\"form-group mb-1\\\">\\n                <label for=\\\"seedName\\\">Seed Name</label>\\n                <input type=\\\"text\\\" [ngClass]=\\\"{\\n                    'border border-danger': seedname.invalid && (seedname.dirty || seedname.touched),\\n                    'border border-success': seedname.valid && (seedname.dirty || seedname.touched)\\n                }\\\" class=\\\"form-control\\\" id=\\\"seedName\\\" formControlName=\\\"seedname\\\" name=\\\"editName\\\" [(ngModel)]=\\\"editName\\\" value=\\\"editName\\\" required>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"seedname.errors && (seedname.dirty || seedname.touched)\\\">\\n                    <small *ngIf=\\\"seedname.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                </div>\\n            </div>\\n            <div class=\\\"form-row mb-1\\\">\\n                <div class=\\\"form-group col-6 mb-1\\\">\\n                    <label for=\\\"seedVariety\\\">Variety</label>\\n                    <select id=\\\"seedVariety\\\" [ngClass]=\\\"{\\n                        'border border-danger': seedVariety.invalid && (seedVariety.dirty || seedVariety.touched),\\n                        'border border-success': seedVariety.valid && (seedVariety.dirty || seedVariety.touched)\\n                    }\\\" class=\\\"form-control\\\" formControlName=\\\"seedVariety\\\" name=\\\"editVariety\\\" [(ngModel)]=\\\"editVariety\\\" required>\\n                        <option selected=\\\"selected\\\" disabled>{{editVariety}}</option>\\n                        <option *ngFor=\\\"let v of variety\\\" [ngValue]=\\\"v\\\">{{v|titlecase}}</option>\\n                    </select>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"seedVariety.errors && (seedVariety.dirty || seedVariety.touched)\\\">\\n                        <small *ngIf=\\\"seedVariety.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group col-6 mb-1\\\">\\n                    <label for=\\\"seedClassification\\\">Classification</label>\\n                    <select id=\\\"seedClassification\\\" [ngClass]=\\\"{\\n                        'border border-danger': seedClassification.invalid && (seedClassification.dirty || seedClassification.touched),\\n                        'border border-success': seedClassification.valid && (seedClassification.dirty || seedClassification.touched)\\n                    }\\\" class=\\\"form-control\\\" formControlName=\\\"seedClassification\\\" name=\\\"editClassification\\\" [(ngModel)]=\\\"editClassification\\\" required>\\n                        <option selected=\\\"selected\\\">{{editClassification}}</option>\\n                        <option *ngFor=\\\"let c of classification\\\" [ngValue]=\\\"c\\\">{{c|titlecase}}</option>\\n                    </select>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"seedClassification.errors && (seedClassification.dirty || seedClassification.touched)\\\">\\n                        <small *ngIf=\\\"seedClassification.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group mb-1\\\">\\n                <label for=\\\"seedDescription\\\">Description</label>\\n                <input type=\\\"text\\\" [ngClass]=\\\"{\\n                    'border border-danger': seedDescription.invalid && (seedDescription.dirty || seedDescription.touched),\\n                    'border border-success': seedDescription.valid && (seedDescription.dirty || seedDescription.touched)\\n                }\\\" class=\\\"form-control\\\" id=\\\"seedDescription\\\" formControlName=\\\"seedDescription\\\" name=\\\"editDesc\\\" [(ngModel)]=\\\"editDesc\\\" value=\\\"editDesc\\\" required>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"seedDescription.errors && (seedDescription.dirty || seedDescription.touched)\\\">\\n                    <small *ngIf=\\\"seedDescription.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group mb-1\\\">\\n                <label for=\\\"seedPrice\\\">Price</label>\\n                <input type=\\\"text\\\" [ngClass]=\\\"{\\n                    'border border-danger': seedPrice.invalid && (seedPrice.dirty || seedPrice.touched),\\n                    'border border-success': seedPrice.valid && (seedPrice.dirty || seedPrice.touched)\\n                }\\\" class=\\\"form-control\\\" id=\\\"seedPrice\\\" formControlName=\\\"seedPrice\\\" name=\\\"editPrice\\\" [(ngModel)]=\\\"editPrice\\\" required>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"seedPrice.errors && (seedPrice.dirty || seedPrice.touched)\\\">\\n                    <small *ngIf=\\\"seedPrice.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-row mb-1\\\">\\n                <div class=\\\"form-group col-6 mb-1\\\">\\n                    <label for=\\\"seedMaturity\\\">Days of Maturity</label>\\n                    <input type=\\\"text\\\" [ngClass]=\\\"{\\n                        'border border-danger': seedMaturity.invalid && (seedMaturity.dirty || seedMaturity.touched),\\n                        'border border-success': seedMaturity.valid && (seedMaturity.dirty || seedMaturity.touched)\\n                    }\\\" class=\\\"form-control\\\" id=\\\"seedMaturity\\\" formControlName=\\\"seedMaturity\\\" name=\\\"editMaturity\\\" [(ngModel)]=\\\"editMaturity\\\" value=\\\"editMaturity\\\" required>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"seedMaturity.errors && (seedMaturity.dirty || seedMaturity.touched)\\\">\\n                        <small *ngIf=\\\"seedMaturity.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                    </div>\\n                 </div>\\n                <div class=\\\"form-group col-6 mb-1\\\">\\n                    <label for=\\\"seedStocks\\\">Stocks</label>\\n                    <input type=\\\"text\\\" [ngClass]=\\\"{\\n                        'border border-danger': seedStocks.invalid && (seedStocks.dirty || seedStocks.touched),\\n                        'border border-success': seedStocks.valid && (seedStocks.dirty || seedStocks.touched)\\n                    }\\\" class=\\\"form-control\\\" id=\\\"seedStocks\\\" formControlName=\\\"seedStocks\\\" name=\\\"editStock\\\" [(ngModel)]=\\\"editStock\\\" value=\\\"editStock\\\" required>\\n                    <div class=\\\"form-control-feedback\\\" *ngIf=\\\"seedStocks.errors && (seedStocks.dirty || seedStocks.touched)\\\">\\n                        <small *ngIf=\\\"seedStocks.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <button [hidden]=\\\"!myform.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary form-control hvr-grow\\\" (click)=\\\"editSeed(deletedModal)\\\">Save</button>\\n        </form>\\n    </div>\\n</ng-template>\\n\\n<ng-template #del let-modal>\\n    <div class=\\\"modal-header bg-danger text-light\\\">\\n        <h5 class=\\\"modal-title\\\">Are you sure you want to delete this record?</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body d-flex justify-content-center\\\">\\n        <button type=\\\"button\\\" (click)=\\\"deleteSeed(deletedModal)\\\" class=\\\"btn btn-danger hvr-buzz\\\">OK</button>\\n        <button type=\\\"button\\\" (click)=\\\"modal.dismiss()\\\" class=\\\"btn btn-light\\\">Cancel</button>\\n    </div>\\n</ng-template>\\n\\n<ng-template #deletedModal let-modal>\\n    <div class=\\\"modal-header bg-success py-4\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body d-flex justify-content-center py-3\\\" [ngSwitch]=\\\"action\\\">\\n        <h5 class=\\\"modal-title\\\" *ngSwitchCase=\\\"'delete'\\\">Record successfully deleted!</h5>\\n        <h5 class=\\\"modal-title\\\" *ngSwitchCase=\\\"'update'\\\">Record successfully Updated!</h5>\\n        <h5 class=\\\"modal-title\\\" *ngSwitchCase=\\\"'add'\\\">Record successfully Added!</h5>\\n        <h5 class=\\\"modal-title\\\" *ngSwitchCase=\\\"'exist'\\\">Seed Name Already Exists!</h5>\\n    </div>\\n</ng-template>\\n<ng-template #logout let-modal>\\n    <div class=\\\"modal-header bg-danger text-light\\\">\\n        <h5 class=\\\"modal-title\\\">Are you sure you want to Logout?</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body d-flex justify-content-center\\\">\\n        <button type=\\\"button\\\" (click)=\\\"clickLogout(modal.dismiss())\\\" class=\\\"btn btn-danger hvr-buzz\\\">YES</button>\\n        <button type=\\\"button\\\" (click)=\\\"modal.dismiss()\\\" class=\\\"btn btn-light\\\">Cancel</button>\\n    </div>\\n  </ng-template>\"","export default \"<!-- <p>user works!</p> -->\\n<div class=\\\"container-fluid p-0 m-0\\\">\\n    <mdb-navbar SideClass=\\\"navbar navbar-1 navbar-light bg-red-style text-light lighten-2\\\" [containerInside]=\\\"false\\\">\\n        <mdb-navbar-brand>\\n            <a class=\\\"navbar-brand link-unstyled text-light brand-style mb-1\\\" routerLink=\\\"/dashboard\\\">\\n                <h5 class=\\\"mb-0 pb-0\\\">TILAH SEED CENTER</h5><br>\\n                <small>Maligaya Branch</small>\\n            </a>\\n            <!-- <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n                <span class=\\\"navbar-toggler-icon bg-light\\\"></span>\\n            </button> -->\\n        </mdb-navbar-brand>\\n        <links>\\n            <ul class=\\\"navbar-nav mr-auto\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a routerLink=\\\"/dashboard\\\" class=\\\"nav-link link-unstyled text-light\\\" [hidden]=\\\"role\\\">Dashboard<span class=\\\"sr-only\\\">(current)</span></a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a routerLink=\\\"/seed\\\" class=\\\"nav-link link-unstyled text-light\\\">Seed<span class=\\\"sr-only\\\">(current)</span></a>\\n                </li>\\n                <li class=\\\"nav-item active\\\">\\n                    <a routerLink=\\\"/user\\\" class=\\\"nav-link link-unstyled text-light\\\" [hidden]=\\\"role\\\">User</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a (click)=\\\"logoutModal(logout)\\\" class=\\\"nav-link link-unstyled text-light\\\">Logout</a>\\n                </li> \\n            </ul>\\n            <!-- <ul class=\\\"navbar-nav\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a (click)=\\\"logoutModal(logout)\\\" class=\\\"nav-link link-unstyled text-light\\\">Logout</a>\\n                </li>  \\n            </ul> -->\\n        </links>\\n    </mdb-navbar>\\n    <div class=\\\"row m-0\\\">\\n        <div class=\\\"col-10 offset-1 p-3 shadow mt-4\\\">\\n        <div class=\\\"row p-3\\\">\\n            <div class=\\\"col-lg-2 col-sm-12 d-flex justify-content-center\\\">\\n            <button class=\\\"btn btn-outline-info btn-sm hvr-grow\\\" (click)=\\\"addUserModal(adduser)\\\">Add New User\\n                <span><i class=\\\"fa fa-plus\\\"></i></span>\\n            </button>\\n            </div>\\n            <div class=\\\"col-lg-8 col-sm-12 d-flex justify-content-center\\\">\\n                <h3 class=\\\"text-spacing text-uppercase hvr-float\\\">User List</h3>\\n            </div>\\n            <!-- <div class=\\\"col-2 d-flex justify-content-end\\\">\\n                <button class=\\\"btn btn-outline-info btn-sm hvr-grow\\\">Generate Report\\n                    <span><i class=\\\"fa fa-download\\\"></i></span>\\n                </button>\\n            </div> -->\\n        </div>\\n        <div class=\\\"table-responsive overflow-y table-style\\\">\\n            <table mdbTable #tableEl=\\\"mdbTable\\\" class=\\\"table z-depth-1\\\" hover=\\\"true\\\">\\n                    <col width=\\\"200\\\"> \\n                    <col width=\\\"200\\\"> \\n                    <col width=\\\"300\\\">\\n                <thead>\\n                    <tr class=\\\"thead-light sticky-top\\\">\\n                        <th *ngFor=\\\"let head of headElements; let i = index\\\" scope=\\\"col\\\">{{head}}</th>\\n                    </tr>\\n                </thead>\\n        \\n                <tbody>\\n                    <tr *ngFor=\\\"let s of list; let i = index\\\">\\n                        <th class=\\\"py-2\\\" *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\"\\n                        scope=\\\"row\\\">{{s.name}}</th>\\n                        <td class=\\\"py-2\\\" *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">{{s.username}}</td>\\n                        <td class=\\\"py-2\\\" *ngIf=\\\"i+1 >= mdbTablePagination.firstItemIndex && i < mdbTablePagination.lastItemIndex\\\">\\n                            <button class=\\\"btn btn-outline-primary btn-sm mr-3 hvr-grow\\\" (click)=\\\"viewUserModal(viewuser, s._id, i)\\\">View\\n                            <!-- <span><i class=\\\"fa fa-edit\\\"></i></span> --></button>\\n                            <button class=\\\"btn btn-outline-warning btn-sm mr-3 hvr-grow\\\" (click)=\\\"editUserModal(edituser, s._id, i)\\\">Edit\\n                            <span><i class=\\\"fa fa-edit\\\"></i></span></button>\\n                            <button class=\\\"btn btn-outline-danger btn-sm hvr-buzz\\\" (click)=\\\"deleteModal(del, s._id)\\\">Delete\\n                            <span><i class=\\\"fa fa-trash\\\"></i></span></button>   \\n                        </td>\\n                    </tr>\\n                </tbody>\\n\\n                <tfoot class=\\\"grey lighten-5 w-100\\\">\\n                    <tr>\\n                        <td colspan=\\\"12\\\" class=\\\"py-0\\\">\\n                            <mdb-table-pagination [tableEl]=\\\"tableEl\\\" [searchDataSource]=\\\"users\\\"></mdb-table-pagination>\\n                        </td>\\n                    </tr>\\n                </tfoot>\\n            </table>\\n        </div>\\n        </div>\\n    </div>\\n    <footer class=\\\"footer fixed-bottom\\\"></footer>\\n</div>\\n  \\n<ng-template #viewuser let-modal>\\n    <div class=\\\"modal-header bg-primary text-light\\\">\\n        <h4 class=\\\"modal-title\\\">View User</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-4\\\">\\n                <img src=\\\"\\\" alt=\\\"\\\" class=\\\"view-img-style\\\">\\n            </div>\\n            <div class=\\\"col-8\\\">\\n                <table *ngFor=\\\"let u of user\\\">\\n                    <tr>\\n                        <td colspan=\\\"2\\\"><h5 class=\\\"font-weight-bold\\\">{{u.name}}</h5></td>\\n                    </tr>\\n                    <tr>\\n                        <td>Role</td>\\n                        <td class=\\\"pl-3\\\">{{u.role}}</td>\\n                    </tr>\\n                    <tr>\\n                        <td>Username</td>\\n                        <td class=\\\"pl-3\\\">{{u.username}}</td>\\n                    </tr>\\n                    <tr>\\n                        <td>Password</td>\\n                        <td class=\\\"pl-3\\\">{{u.password}}</td>\\n                    </tr>\\n                    <tr>\\n                        <td colspan=\\\"2\\\">\\n                            <button (click)=\\\"clickHistory(users[index]._id); modal.dismiss()\\\" class=\\\"btn btn-primary btn-sm form-control\\\">View History</button>\\n                        </td>\\n                    </tr>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\\n<ng-template #adduser let-modal>\\n    <div class=\\\"modal-header bg-primary text-light\\\">\\n    <h4 class=\\\"modal-title\\\">Add New User</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click'); myform.reset()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"myform\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"userFullName\\\">Full Name</label>\\n                <input type=\\\"text\\\" [ngClass]=\\\"{\\n                    'border border-danger': fullName.invalid && (fullName.dirty || fullName.touched),\\n                    'border border-success': fullName.valid && (fullName.dirty || fullName.touched)\\n                }\\\" class=\\\"form-control\\\" formControlName=\\\"fullName\\\" id=\\\"userFullName\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\" required>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"fullName.errors && (fullName.dirty || fullName.touched)\\\">\\n                    <small *ngIf=\\\"fullName.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"userRole\\\">Role</label>\\n                <input type=\\\"text\\\" [ngClass]=\\\"{\\n                    'border border-danger': userRole.invalid && (userRole.dirty || userRole.touched),\\n                    'border border-success': userRole.valid && (userRole.dirty || userRole.touched)\\n                }\\\" class=\\\"form-control\\\" id=\\\"userRole\\\" formControlName=\\\"userRole\\\" name=\\\"addRole\\\" [(ngModel)]=\\\"addRole\\\" required>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"userRole.errors && (userRole.dirty || userRole.touched)\\\">\\n                    <small *ngIf=\\\"userRole.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"userName\\\">Username</label>\\n                <input type=\\\"text\\\" [ngClass]=\\\"{\\n                    'border border-danger': userName.invalid && (userName.dirty || userName.touched),\\n                    'border border-success': userName.valid && (userName.dirty || userName.touched)\\n                }\\\" class=\\\"form-control\\\" id=\\\"userName\\\" formControlName=\\\"userName\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\" required>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"userName.errors && (userName.dirty || userName.touched)\\\">\\n                    <small *ngIf=\\\"userName.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"userPassword\\\">Password</label>\\n                <input type=\\\"password\\\" [ngClass]=\\\"{\\n                    'border border-danger': userPassword.invalid && (userPassword.dirty || userPassword.touched),\\n                    'border border-success': userPassword.valid && (userPassword.dirty || userPassword.touched)\\n                }\\\" class=\\\"form-control\\\" id=\\\"userPassword\\\" formControlName=\\\"userPassword\\\" name=\\\"passWord\\\" [(ngModel)]=\\\"passWord\\\" required>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"userPassword.errors && (userPassword.dirty || userPassword.touched); else elseBlock\\\">\\n                    <small *ngIf=\\\"userPassword.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                </div>\\n                <ng-template #elseBlock>\\n                    <small class=\\\"text-info text-muted\\\">**Password must be atleast 6 characters and may contain letters, numbers and special characters e.g. .@#!&*-_/</small>\\n                </ng-template>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"confirmPassword\\\">Confirm Password</label>\\n                <input type=\\\"password\\\" [ngClass]=\\\"{\\n                    'border border-danger': (confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched)) || (confirmPassword.touched && confirmPassword != passWord),\\n                    'border border-success': confirmPassword.valid && (confirmPassword.dirty || confirmPassword.touched)\\n                }\\\" class=\\\"form-control\\\" id=\\\"confirmPassword\\\" formControlName=\\\"confirmPassword\\\" name=\\\"confirmPassWord\\\" [(ngModel)]=\\\"confirmPassWord\\\" required>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"confirmPassword.errors && (confirmPassword.dirty || confirmPassword.touched)\\\">\\n                    <small *ngIf=\\\"confirmPassword != passWord\\\" class=\\\"text-danger\\\">**Password did not match</small><br>\\n                    <small *ngIf=\\\"confirmPassword.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                </div>\\n            </div>\\n\\n            <button [hidden]=\\\"!myform.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary form-control hvr-grow\\\" (click)=\\\"addUser(deletedModal)\\\">Add</button>\\n        </form>\\n    </div>\\n</ng-template>\\n\\n<ng-template #edituser let-modal>\\n    <div class=\\\"modal-header bg-warning text-light\\\">\\n        <h4 class=\\\"modal-title\\\">Edit User</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <form [formGroup]=\\\"myform\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"userFullName\\\">Full Name</label>\\n                <input type=\\\"text\\\" [ngClass]=\\\"{\\n                    'border border-danger': fullName.invalid && (fullName.dirty || fullName.touched),\\n                    'border border-success': fullName.valid && (fullName.dirty || fullName.touched)\\n                }\\\" class=\\\"form-control\\\" id=\\\"userFullName\\\"  formControlName=\\\"fullName\\\" name=\\\"editName\\\" [(ngModel)]=\\\"editName\\\" value=\\\"editName\\\" required>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"fullName.errors && (fullName.dirty || fullName.touched)\\\">\\n                    <small *ngIf=\\\"fullName.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"userRole\\\">Role</label>\\n                <input type=\\\"text\\\" [ngClass]=\\\"{\\n                    'border border-danger': userRole.invalid && (userRole.dirty || userRole.touched),\\n                    'border border-success': userRole.valid && (userRole.dirty || userRole.touched)\\n                }\\\" class=\\\"form-control\\\" id=\\\"userRole\\\"  formControlName=\\\"userRole\\\" name=\\\"editRole\\\" [(ngModel)]=\\\"editRole\\\" value=\\\"editRole\\\" required>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"userRole.errors && (userRole.dirty || userRole.touched)\\\">\\n                    <small *ngIf=\\\"userRole.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"userName\\\">Username</label>\\n                <input type=\\\"text\\\" [ngClass]=\\\"{\\n                    'border border-danger': userName.invalid && (userName.dirty || userName.touched),\\n                    'border border-success': userName.valid && (userName.dirty || userName.touched)\\n                }\\\" class=\\\"form-control\\\" id=\\\"userName\\\" formControlName=\\\"userName\\\" name=\\\"editUserName\\\" [(ngModel)]=\\\"editUserName\\\" value=\\\"editUserName\\\" required>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"userName.errors && (userName.dirty || userName.touched)\\\">\\n                    <small *ngIf=\\\"userName.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"userPassword\\\">Password</label>\\n                <input type=\\\"password\\\" [ngClass]=\\\"{\\n                    'border border-danger': userPassword.invalid && (userPassword.dirty || userPassword.touched),\\n                    'border border-success': userPassword.valid && (userPassword.dirty || userPassword.touched)\\n                }\\\" class=\\\"form-control\\\" id=\\\"userPassword\\\" formControlName=\\\"userPassword\\\" name=\\\"editPassword\\\" [(ngModel)]=\\\"editPassword\\\" value=\\\"editPassword\\\" required>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"userPassword.errors && (userPassword.dirty || userPassword.touched); else elseBlock\\\">\\n                    <small *ngIf=\\\"userPassword.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                </div>\\n                <ng-template #elseBlock>\\n                    <small class=\\\"text-info text-muted\\\">**Password must be atleast 6 characters and may contain letters, numbers and special characters e.g. .@#!&*-_/</small>\\n                </ng-template>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"confirmPassword\\\">Confirm Password</label>\\n                <input type=\\\"password\\\" [ngClass]=\\\"{\\n                    'border border-danger': (confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched)) || (editConfirmPassword.touched && editConfirmPassword != editPassword),\\n                    'border border-success': confirmPassword.valid && (confirmPassword.dirty || confirmPassword.touched)\\n                }\\\" class=\\\"form-control\\\" id=\\\"confirmPassword\\\" formControlName=\\\"confirmPassword\\\" name=\\\"editConfirmPassword\\\" [(ngModel)]=\\\"editConfirmPassword\\\" required>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"confirmPassword.errors && (confirmPassword.dirty || confirmPassword.touched)\\\">\\n                    <small *ngIf=\\\"editConfirmPassword != editPassword\\\" class=\\\"text-danger\\\">**Password did not match</small><br>\\n                    <small *ngIf=\\\"confirmPassword.errors.required\\\" class=\\\"text-danger\\\">**Required</small>\\n                </div>\\n            </div>\\n\\n            <button [hidden]=\\\"!myform.valid\\\" type=\\\"button\\\" class=\\\"btn btn-primary form-control hvr-grow\\\" (click)=\\\"editUser(deletedModal)\\\">Save</button>\\n        </form>\\n    </div>\\n</ng-template>\\n\\n<ng-template #del let-modal>\\n    <div class=\\\"modal-header bg-danger text-light\\\">\\n        <h5 class=\\\"modal-title\\\">Are you sure you want to delete?</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body d-flex justify-content-center\\\">\\n        <button type=\\\"button\\\" (click)=\\\"deleteUser(deletedModal)\\\" class=\\\"btn btn-danger hvr-buzz\\\">OK</button>\\n    </div>\\n</ng-template>\\n\\n<ng-template #deletedModal let-modal>\\n    <div class=\\\"modal-header bg-success py-4\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body d-flex justify-content-center py-3\\\" [ngSwitch]=\\\"action\\\">\\n        <h5 class=\\\"modal-title\\\" *ngSwitchCase=\\\"'delete'\\\">Record successfully deleted!</h5>\\n        <h5 class=\\\"modal-title\\\" *ngSwitchCase=\\\"'update'\\\">Record successfully Updated!</h5>\\n        <h5 class=\\\"modal-title\\\" *ngSwitchCase=\\\"'add'\\\">Record successfully Added!</h5>\\n    </div>\\n</ng-template>\\n\\n<ng-template #logout let-modal>\\n    <div class=\\\"modal-header bg-danger text-light\\\">\\n        <h5 class=\\\"modal-title\\\">Are you sure you want to Logout?</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body d-flex justify-content-center\\\">\\n        <button type=\\\"button\\\" (click)=\\\"clickLogout(modal.dismiss())\\\" class=\\\"btn btn-danger hvr-buzz\\\">YES</button>\\n        <button type=\\\"button\\\" (click)=\\\"modal.dismiss()\\\" class=\\\"btn btn-light\\\">Cancel</button>\\n    </div>\\n</ng-template>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { PosComponent } from './pos/pos.component';\nimport { SeedComponent } from './seed/seed.component';\nimport { UserComponent } from './user/user.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LogsComponent } from './logs/logs.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { AuthGuard } from './auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'pointOfSale',\n    component: PosComponent\n  },\n  {\n    path: 'seed',\n    component: SeedComponent\n  },\n  {\n    path: 'user',\n    component: UserComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'logs',\n    component: LogsComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'logs/:id',\n    component: LogsComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tilahSystem';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n// import { NgxPaginationModule } from 'ngx-pagination';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptorService } from './token-interceptor.service'\nimport { PosComponent } from './pos/pos.component';\nimport { SeedComponent } from './seed/seed.component';\nimport { UserComponent } from './user/user.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HistoryComponent } from './history/history.component';\nimport { LogsComponent } from './logs/logs.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { AuthGuard } from './auth.guard';\nimport { AuthService } from './auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    PosComponent,\n    SeedComponent,\n    UserComponent,\n    DashboardComponent,\n    HistoryComponent,\n    LogsComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MDBBootstrapModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgbModule\n    // NgxPaginationModule\n  ],\n  providers: [AuthGuard, AuthService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptorService,\n    multi: true\n  }],\n  bootstrap: [AppComponent],\n\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service'\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate{\n  // canActivate(\n  //   next: ActivatedRouteSnapshot,\n  //   state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n  //   return true;\n  // }\n  // canActivateChild(\n  //   next: ActivatedRouteSnapshot,\n  //   state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n  //   return true;\n  // }\n  // canLoad(\n  //   route: Route,\n  //   segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\n  //   return true;\n  // }\n\n  constructor(private authService: AuthService,\n              private userService: UserService,\n              private router: Router){}\n\n  canActivate(): boolean {\n    \n    if(this.authService.loggedIn()){\n        return true;\n    }\n    else{\n      localStorage.removeItem('token');\n      localStorage.removeItem('userId');\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs'\nimport { User } from './user';\nimport { Router } from '@angular/router';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient,\n              private router: Router,\n              private userService: UserService) { }\n\n  private url:String = \"https://tilah-system.herokuapp.com\";\n\n  //private headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  // addUser(user: User):Observable<any>{\n  //   return this.http.post<any>(\n  //     this.url + \"/user\",\n  //     user\n  //     //{headers: this.headers}\n  //   );\n  // }\n\n  logInUser(user: User):Observable<any>{\n    return this.http.post<any>(\n      this.url + \"/user/login\",\n      user\n      // {headers: this.headers}\n    );\n  }\n\n  userRole;\n\n  loggedIn(){\n    this.userService.currentUser = localStorage.getItem('userId');\n    this.userService.getUser(this.userService.currentUser).subscribe((data) => {\n      this.userRole = data[0].role;\n    })\n    if(this.userRole == \"admin\" && !!localStorage.getItem('token')){\n      return true;\n    }\n    else{\n      return false;\n    }\n    // return !!localStorage.getItem('token');\n  }\n\n  logOut(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    this.router.navigate(['/login']);\n  }\n\n  getToken(){\n    return localStorage.getItem('token');\n  }\n}\n","export default \".bg-header {\\n  background-color: #d40000;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL0M6XFxVc2Vyc1xcY2FtaWxcXERlc2t0b3BcXElUU0RGSU5BTFxcdGlsYWhTeXN0ZW0yL3NyY1xcYXBwXFxkYXNoYm9hcmRcXGRhc2hib2FyZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJnLWhlYWRlcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjEyLCAwLCAwKTtcclxufSIsIi5iZy1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDQwMDAwO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { SaleService } from '../sale.service';\nimport { Sale } from '../sale';\nimport { SeedService } from '../seed.service';\nimport { Seed } from '../seed';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AuthService } from '../auth.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  //arrays\n  private sales: Sale[];\n  private seeds: Seed[];\n  public ctr: Array<any>;\n  public seedSale: Array<any> = [];\n  public chartLabels; \n  private variety = [\"inbred\", \"hybrid\"];\n  private classification = [\"long\", \"round\", \"medium\"];\n  private category = [\"Seed Name\", \"Seed Variety\", \"Seed Classification\"];\n  public chartDatasets: Array<any> = [\n    { data: [], label: 'Seed Sales' },\n    { data: [], label: 'Seed Sales' }\n  ];\n  public chartColors: Array<any> = [\n    {\n      backgroundColor: 'rgba(105, 0, 132, .2)',\n      borderColor: 'rgba(200, 99, 132, .7)',\n      borderWidth: 2,\n    },\n    {\n      backgroundColor: 'rgba(0, 137, 132, .2)',\n      borderColor: 'rgba(0, 10, 130, .7)',\n      borderWidth: 2,\n    }\n  ];\n\n  public date = Date();\n  public dateNow;\n\n  //formNames\n  public seedname = \"\";\n  public seedname1 = \"\";\n  public seedvariety = \"\";\n  public seedvariety1 = \"\";\n  public seedclass = \"\";\n  public seedclass1 = \"\";\n  public cat = \"\";\n\n  public seedId;\n  public totalSales = 0;\n  public totalCount = 0;\n\n  public chartType: string = 'line';\n\n  \n  public chartOptions: any = {\n    responsive: true\n  };\n  public chartClicked(e: any): void { }\n  public chartHovered(e: any): void { }\n\n  constructor(private saleService: SaleService,\n              private seedService: SeedService,\n              private userService: UserService,\n              private authService: AuthService,\n              private modalService: NgbModal,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.getSales();\n    this.dateNow = this.date.substring(4, 7);\n    this.seedService.getSeeds().subscribe(\n      data => {\n        this.seeds = data;\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n  }\n\n  getSales(){\n    this.totalCount = 0;\n    this.saleService.getSales().subscribe(\n      data => {\n        this.sales = data;\n        this.setChartLabels();\n        this.setChartData();\n\n        for(var i=0; i<this.sales.length; i++){\n          this.totalSales += this.sales[i].amount;\n          this.totalCount ++;\n        }\n\n        //this.getSeedSaleCount();\n\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n  }\n\n  // getSeedSaleCount(){\n  //   this.seedSale = [];\n  //   this.seedService.getSeeds().subscribe((data) => {\n  //     this.seeds = data;\n\n  //     for(var i=0; i<this.sales.length; i++){\n  //       for(var j=0; j<this.seeds.length; j++){\n  //         if(this.sales[i].itemId == this.seeds[j]._id){\n  //           for(var k=0; k<this.seedSale.length; k++){\n  //             if(this.seedSale[k].seedId == this.sales[i].itemId){\n  //               var bool = true;\n  //               var index = k;\n  //             }\n  //           }\n  //           if(bool){\n  //             this.seedSale[index].saleCount = this.seedSale[index].saleCount + 1;\n  //           }\n  //           else{\n  //             var obj = {seedId: this.seeds[j]._id, saleCount: 1}\n  //             this.seedSale.push(obj);\n  //           }\n  //         }\n  //       }\n  //     }\n  //   });\n    \n  //   console.log(this.seedSale)\n  // }\n\n  setChartLabels(){\n    switch(this.dateNow){\n      case \"Jan\" : \n        this.chartLabels = ['September', 'October', 'November', 'December', 'January'];\n        this.ctr = ['09', '10', '11', '12', '01'];\n        break;\n      case \"Feb\" :\n        this.chartLabels = ['October', 'November', 'December', 'January', 'February'];\n        this.ctr = ['10', '11', '12', '01', '02'];\n        break;\n      case \"Mar\" : \n        this.chartLabels = ['November', 'December', 'January', 'February', 'March'];\n        this.ctr = ['11', '12', '01', '02', '03'];\n        break;\n      case \"Apr\" : \n        this.chartLabels = ['December', 'January', 'February', 'March', 'April'];\n        this.ctr = ['12', '01', '02', '03', '04'];\n        break;\n      case \"May\" : \n        this.chartLabels = ['January', 'February', 'March', 'April', 'May',];\n        this.ctr = ['01', '02', '03', '04', '05'];\n        break;\n      case \"Jun\" : \n        this.chartLabels = ['February', 'March', 'April', 'May', 'June'];\n        this.ctr = ['02', '03', '04', '05', '06'];\n        break;\n      case \"Jul\" : \n        this.chartLabels = ['March', 'April', 'May', 'June', 'July'];\n        this.ctr = ['03', '04', '05', '06', '07'];\n        break;\n      case \"Aug\" : \n        this.chartLabels = ['April', 'May', 'June', 'July', 'August'];\n        this.ctr = ['04', '05', '06', '07', '08'];\n        break;\n      case \"Sep\" : \n        this.chartLabels = ['May', 'June', 'July', 'August', 'September'];\n        this.ctr = ['05', '06', '07', '08', '09'];\n        break;\n      case \"Oct\" : \n        this.chartLabels = ['June', 'July', 'August', 'September', 'October'];\n        this.ctr = ['06', '07', '08', '09', '10'];\n        break;\n      case \"Nov\" : \n        this.chartLabels = ['July', 'August', 'September', 'October', 'November'];\n        this.ctr = ['07', '08', '09', '10', '11'];\n        break;\n      case \"Dec\" : \n        this.chartLabels = ['August', 'September', 'October', 'November', 'December'];\n        this.ctr = ['08', '09', '10', '11', '12'];\n        break;\n      default: this.chartLabels = ['January', 'February', 'March', 'April', 'May'];\n    }\n  }\n\n  setChartData(){\n   this.chartDatasets = [\n      { data: [], label: 'Seed Sales' },\n      { data: [], label: 'Seed Sales' }\n    ];\n    var ctr=0;\n    var ctr2=0;\n    var label, label2;\n    for(var i=0; i<this.ctr.length; i++){\n      ctr=0;\n      ctr2=0;\n      for(var  j=0; j<this.sales.length; j++){\n        if(this.cat == \"\"){\n          if(this.sales[j].dateNow == this.ctr[i]){\n            ctr++;\n            label = \"Seed Sales\";\n            label2 = \"---\";\n          }\n        }\n        else{\n          this.seedId = this.getSeedId();\n          if(this.cat == \"Seed Name\" && this.seedname1 == \"\"){\n            if(this.sales[j].dateNow == this.ctr[i] && this.sales[j].itemId == this.seedId){\n              ctr++;\n              label = this.seedname + \" Sales\";\n              label2 = \"---\";\n            }\n          }\n          else if(this.cat == \"Seed Variety\" && this.seedvariety1 == \"\"){\n            for(var k=0; k<this.seedId.length; k++){\n              if(this.sales[j].dateNow == this.ctr[i] && this.sales[j].itemId == this.seedId[k]){\n                ctr++;\n                label = this.seedvariety + \" Sales\";\n                label2 = \"---\";\n              }\n            }\n          }\n          else if(this.cat == \"Seed Classification\" && this.seedclass1 == \"\"){\n            for(var k=0; k<this.seedId.length; k++){\n              if(this.sales[j].dateNow == this.ctr[i] && this.sales[j].itemId == this.seedId[k]){\n                ctr++;\n                label = this.seedclass + \" Sales\";\n                label2 = \"---\";\n              }\n            }\n          }\n          else if(this.seedname1 != \"\"){\n            this.seedId2 = this.getSeedId2();\n            if(this.sales[j].dateNow == this.ctr[i] && this.sales[j].itemId == this.seedId){\n              ctr++;\n              label = this.seedname + \" Sales\";\n            }\n            if(this.sales[j].dateNow == this.ctr[i] && this.sales[j].itemId == this.seedId2){\n              ctr2++;\n              label2 = this.seedname1 + \" Sales\";\n            }\n          }\n          else if(this.seedvariety1 != \"\" || this.seedclass1 != \"\"){\n            this.seedId2 = this.getSeedId2();\n            for(var k=0; k<this.seedId.length; k++){\n              if(this.sales[j].dateNow == this.ctr[i] && this.sales[j].itemId == this.seedId[k]){\n                ctr++;\n                label2 = \"Seed Sales\";\n              }\n            }\n            for(var l=0; l<this.seedId.length; l++){\n              if(this.sales[j].dateNow == this.ctr[i] && this.sales[j].itemId == this.seedId2[l]){\n                ctr2++;\n                label2 = \"Seed Sales\";\n              }\n            }\n          }\n          else{\n            if(this.sales[j].dateNow == this.ctr[i]){\n              ctr++;\n              label = \"Seed Sales\";\n            }\n          }\n        }\n      }\n      this.chartDatasets[0].data[i] = ctr;\n      this.chartDatasets[0].label = label;\n      this.chartDatasets[1].data[i] = ctr2;\n      this.chartDatasets[1].label = label2;\n    }\n    this.cat = \"\";\n    this.seedname = \"\";\n    this.seedname1 = \"\";\n    this.seedvariety = \"\";\n    this.seedvariety1 = \"\";\n    this.seedclass = \"\";\n    this.seedclass1 = \"\";\n  } \n\n  getSeedId(){\n    var x=0;\n    if(this.cat == \"Seed Name\"){\n      for(var i = 0; i<this.seeds.length; i++){\n        if(this.seedname == this.seeds[i].name){\n          this.seedId = this.seeds[i]._id;\n        }\n      }\n    }\n    else if(this.cat == \"Seed Variety\"){\n      this.seedId = [];\n      for(var i = 0; i<this.seeds.length; i++){\n        if(this.seedvariety == this.seeds[i].variety){\n          this.seedId[x] = this.seeds[i]._id;\n          x++;\n        }\n      }\n    }\n    else if(this.cat == \"Seed Classification\"){\n      this.seedId = [];\n      for(var i = 0; i<this.seeds.length; i++){\n        if(this.seedclass == this.seeds[i].classification){\n          this.seedId[x] = this.seeds[i]._id;\n          x++;\n        }\n      }\n    }\n\n    return this.seedId;\n  }\n\n  public seedId2;\n  getSeedId2(){\n    var y=0;\n    if(this.cat == \"Seed Name\"){\n      for(var i = 0; i<this.seeds.length; i++){\n        if(this.seedname1 == this.seeds[i].name){\n          this.seedId2 = this.seeds[i]._id;\n        }\n      }\n    }\n    else if(this.cat == \"Seed Variety\"){\n      this.seedId2 = [];\n      for(var i = 0; i<this.seeds.length; i++){\n        if(this.seedvariety1 == this.seeds[i].variety){\n          this.seedId2[y] = this.seeds[i]._id;\n          y++;\n        }\n      }\n    }\n    else if(this.cat == \"Seed Classification\"){\n      this.seedId2 = [];\n      for(var i = 0; i<this.seeds.length; i++){\n        if(this.seedclass1 == this.seeds[i].classification){\n          this.seedId2[y] = this.seeds[i]._id;\n          y++;\n        }\n      }\n    }\n\n    return this.seedId2;\n  }\n\n  logoutModal(logout){\n    this.modalService.open(logout, { centered: true });\n  }\n\n  clickLogout(){\n      this.authService.logOut();\n  }\n}","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { History } from './history';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoryService {\n\n  public userId = \"\";\n\n  constructor(private http: HttpClient) { }\n\n  private url:String = \"https://tilah-system.herokuapp.com\";\n  private headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  addHistory(histo: History):Observable<any>{\n    return this.http.post<any>(\n      this.url + \"/log\",\n      histo,\n      {headers: this.headers} \n    );\n  }\n\n  getHistory():Observable<any>{\n    return this.http.get<any>(\n      this.url + \"/log\"\n    );\n  }\n\n  getUserHistory(id):Observable<any>{\n    return this.http.get<any>(\n      this.url + \"/log/\" + id,\n    );\n  }\n}\n ","export class History{\r\n    seed: String;\r\n    userID: String;\r\n    user: String;\r\n    action: String;\r\n    dateModified: Date;\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hpc3RvcnkvaGlzdG9yeS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.scss']\n})\nexport class HistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\nimport { UserService } from '../user.service';\nimport { User } from '../user';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private userService: UserService,\n              private router: Router,\n              private modalService: NgbModal,\n              private authService: AuthService) { }\n\n  private users: User[];\n  private user\n  private action;\n\n  private userName: String;\n  private passWord: String;\n\n  myform: FormGroup;\n  username: FormControl;\n  password: FormControl;\n\n  ngOnInit() {\n    this.getUsers();\n    this.createFormControls();\n    this.createForm();\n  }\n\n  // ngAfterViewInit(){\n  //   this.getUsers();\n  // }\n\n  createFormControls(){\n    this.username = new FormControl('', [Validators.required]);\n    this.password = new FormControl('', [Validators.required]);\n  }\n\n  createForm(){\n    this.myform = new FormGroup({\n      username: this.username,\n      password: this.password\n    });\n  }\n\n  getUsers(){\n    this.userService.getUsers().subscribe(\n      data => {\n        this.users = data;\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n  }\n\n  clickLogin(deletedModal){\n    var user = new User();\n    user.username = this.userName;\n    user.password = this.passWord;\n    this.authService.logInUser(user).subscribe(data=> {\n      localStorage.setItem('token', data.token);\n      this.user = data;\n\n      this.userService.getUsers().subscribe(\n        data => {\n          this.users = data;\n          var logged = false;\n          var index;\n          for(var i=0; i<this.users.length; i++){\n            if(this.userName == this.users[i].username && this.passWord == this.users[i].password){\n              logged = true;\n              index = i;\n            }\n          }\n          if(logged && this.users[index].role == \"admin\"){\n            localStorage.setItem(\"userId\", this.users[index]._id);\n            this.userService.currentUser = localStorage.getItem('userId');\n            this.deletedModal(deletedModal, \"admin\");\n          }\n          else if(logged && this.users[index].role == \"user\"){\n            localStorage.setItem(\"userId\", this.users[index]._id);\n            this.userService.currentUser = localStorage.getItem('userId');\n            this.deletedModal(deletedModal, \"user\");\n          }\n          else{\n            this.deletedModal(deletedModal, \"invalid\");\n          }\n        },\n\n        err => {\n          if(err instanceof HttpErrorResponse){\n            if(err.status == 401){\n              this.deletedModal(deletedModal, \"invalid\");\n            }\n          }\n        }\n      );\n    },\n    err => {\n      if(err instanceof HttpErrorResponse){\n        if(err.status == 401){\n          this.deletedModal(deletedModal, \"invalid\");\n        }\n      }\n    });\n  }\n \n  deletedModal(deletedModal, action){\n    this.modalService.open(deletedModal, { centered: true });\n    this.action = action;\n  }\n\n  clickOk(route){\n    this.router.navigate(['/' + route]);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ3MvbG9ncy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ChangeDetectorRef, ViewChild} from '@angular/core';\nimport { MdbTablePaginationComponent, MdbTableDirective } from 'angular-bootstrap-md';\nimport { HistoryService } from '../history.service';\nimport { History } from '../history';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n\n\n@Component({\n  selector: 'app-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.scss']\n})\nexport class LogsComponent implements OnInit {\n\n  elements: any = [];\n  previous: any = [];\n  headElements = ['User', 'Seed', 'Action', 'Date'];\n\n  private logs: History[];\n\n  constructor(private logService: HistoryService,\n              private authService: AuthService,\n              private modalService: NgbModal,\n              private cdRef: ChangeDetectorRef,\n              private router: Router) { }\n\n  @ViewChild(MdbTablePaginationComponent, { static: true }) mdbTablePagination: MdbTablePaginationComponent;\n  @ViewChild(MdbTableDirective, { static: true }) mdbTable: MdbTableDirective;\n          \n  ngOnInit() {\n    if(this.logService.userId == \"\"){\n      this.getLogs();\n    }\n    else{\n      this.getLog();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.mdbTablePagination.setMaxVisibleItemsNumberTo(4);\n\n    this.mdbTablePagination.calculateFirstItemIndex();\n    this.mdbTablePagination.calculateLastItemIndex();\n    this.cdRef.detectChanges();\n  }\n\n  getLogs(){\n    this.logService.getHistory().subscribe(\n      data => {\n        this.logs = data;\n\n        this.mdbTable.setDataSource(this.logs);\n        this.logs = this.mdbTable.getDataSource();\n        this.previous = this.mdbTable.getDataSource();\n\n        this.mdbTablePagination.setMaxVisibleItemsNumberTo(4);\n\n        this.mdbTablePagination.calculateFirstItemIndex();\n        this.mdbTablePagination.calculateLastItemIndex();\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n  }\n\n  getLog(){\n    this.logService.getUserHistory(this.logService.userId).subscribe(\n      data => {\n        console.log(data)\n        this.logs = data;\n\n        this.mdbTable.setDataSource(this.logs);\n        this.logs = this.mdbTable.getDataSource();\n        this.previous = this.mdbTable.getDataSource();\n\n        this.mdbTablePagination.setMaxVisibleItemsNumberTo(4);\n\n        this.mdbTablePagination.calculateFirstItemIndex();\n        this.mdbTablePagination.calculateLastItemIndex();\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n    this.logService.userId = \"\";\n  }\n\n  logoutModal(logout){\n    this.modalService.open(logout, { centered: true });\n  }\n\n  clickLogout(){\n      this.authService.logOut();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  private orders = [];\n  private total = 0;\n\n  setOrders(order){\n    var res =false;\n    var index;\n    for(var i=0; i<this.orders.length; i++){\n      if(order.name == this.orders[i].name){\n        res = true;\n        index = i;\n      }\n    }\n    if(res){\n      var ctr = this.orders[index].quantity + 1;\n      var amt = this.orders[index].price * ctr;\n      this.orders[index] = \n        {\"name\": this.orders[index].name, \"quantity\": ctr, \"price\": this.orders[index].price, \"amount\": amt};\n      this.total += this.orders[index].price; \n    }\n    else{\n      var obj = {\"name\": order.name, \"quantity\": 1, \"price\": order.price, \"amount\": order.price}\n      this.orders.push(obj);  \n      this.total += order.price;\n    }\n    return this.total;\n  }\n\n  getOrders(){\n    return this.orders;\n  }\n\n  getTotal(){\n    return this.total;\n  }\n\n  clearOrders(){\n    this.orders = [];\n    this.total = 0;\n  }\n\n  constructor() { }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2Utbm90LWZvdW5kL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".div-height {\\n  height: 500px;\\n}\\n\\n.h {\\n  height: 300px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zL0M6XFxVc2Vyc1xcY2FtaWxcXERlc2t0b3BcXElUU0RGSU5BTFxcdGlsYWhTeXN0ZW0yL3NyY1xcYXBwXFxwb3NcXHBvcy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvcG9zL3Bvcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUNDSjs7QURDQTtFQUNJLGFBQUE7QUNFSiIsImZpbGUiOiJzcmMvYXBwL3Bvcy9wb3MuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGl2LWhlaWdodHtcclxuICAgIGhlaWdodDogNTAwcHg7XHJcbn1cclxuLmh7XHJcbiAgICBoZWlnaHQ6IDMwMHB4O1xyXG59IiwiLmRpdi1oZWlnaHQge1xuICBoZWlnaHQ6IDUwMHB4O1xufVxuXG4uaCB7XG4gIGhlaWdodDogMzAwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { Seed } from '../seed';\nimport { User } from '../user';\nimport { Sale } from '../sale';\n\nimport { SeedService } from '../seed.service';\nimport { OrderService } from '../order.service';\nimport { UserService } from '../user.service';\nimport { SaleService } from '../sale.service';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AuthService } from '../auth.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-pos',\n  templateUrl: './pos.component.html',\n  styleUrls: ['./pos.component.scss']\n})\nexport class PosComponent implements OnInit {\n\n  private user: User[];\n  public items: Seed[];\n  public item: Seed[];\n  public orders;\n  public obj;\n  public total = 0;\n  public payment = 0;\n  public change = 0;\n  basicModal;\n\n  public date = Date();\n  public dateNow;\n  public dateNum;\n\n  headElements = ['Item Name', 'Price', 'Quantity', 'Amount'];\n\n  constructor(private itemService: SeedService,\n    private orderService: OrderService,\n    private userService: UserService,\n    private saleService: SaleService,\n    private authService: AuthService,\n    private modalService: NgbModal,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.getItems();\n    this.orders = this.orderService.getOrders();\n    this.getUser();\n    this.dateNow = this.date.substring(4, 7);\n    this.setDate();\n  }\n\n  getUser(){\n    this.userService.getUser(this.userService.currentUser).subscribe(\n      data => {\n        this.user = data;\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n  }\n\n  getItems(){\n    this.itemService.getSeeds().subscribe(\n      data => {\n        this.items = data;\n        this.item = data;\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n  }\n\n  onClick(item){\n    var x = false;\n    for(var i=0; i<this.items.length; i++){\n      if((this.items[i]._id == item) && (this.items[i].stocks != 0 )){\n        this.obj = \n          {\"name\": this.items[i].name, \"price\": this.items[i].price};\n        x = true;\n      }\n    }\n    if(x){\n        this.total = this.orderService.setOrders(this.obj);\n        x = false;\n    }\n    else{\n      alert(\"This Seed was out of Stock!\")\n      x = false;\n    }\n  }\n\n  clickClear(){\n    this.orderService.clearOrders();\n    this.orders = this.orderService.getOrders();\n    this.total = this.orderService.getTotal();\n  }\n\n  payModal(pay){\n    this.modalService.open(pay, { centered: true });\n  }\n\n  clickPay(id){\n    if(this.change >= 0){\n      for(var j=0; j<this.items.length; j++){\n        for(var i=0; i<this.orders.length; i++){\n          if(this.items[j].name == this.orders[i].name){\n            //this.items[j].stocks = this.items[j].stocks - this.orders[i].quantity;\n            var seed = new Seed();\n            seed.name = this.items[j].name;\n            seed.variety = this.items[j].variety;\n            seed.classification = this.items[j].classification;\n            seed.description = this.items[j].description;\n            seed.stocks = this.items[j].stocks - this.orders[i].quantity;\n            seed.number_of_days = this.items[j].number_of_days;\n            seed.price = this.items[j].price;\n            seed.updated_by = this.userService.currentUser;\n            this.itemService.updateSeed(seed, this.items[j]._id).subscribe(\n              data => {\n                this.getItems();\n                this.orders = this.orderService.getOrders();\n                this.getUser();\n              },\n              err => {\n                if(err instanceof HttpErrorResponse){\n                  if(err.status === 401){\n                    this.router.navigate(['/login']);\n                  }\n                }\n              }\n            );\n            var sale = new Sale();\n            sale.itemId = this.items[j]._id;\n            sale.quantity = this.orders[i].quantity;\n            sale.amount = this.orders[i].amount;\n            sale.sold_by = id;\n            sale.dateNow = this.dateNum;\n\n            this.saleService.addSale(sale).subscribe((data) => {\n              this.getItems();\n              this.orders = this.orderService.getOrders();\n              this.getUser();\n            })\n          }\n        }\n      }\n\n      this.orderService.clearOrders();\n      this.orders = this.orderService.getOrders();\n      this.total = this.orderService.getTotal();\n      this.payment = 0;\n      this.change = 0;\n    }\n  }\n\n  setDate(){\n    switch(this.dateNow){\n      case \"Jan\" : \n        this.dateNum = '01';\n        break;\n      case \"Feb\" :\n        this.dateNum = '02';\n        break;\n      case \"Mar\" : \n        this.dateNum = '03';\n        break;\n      case \"Apr\" : \n        this.dateNum = '04';\n        break;\n      case \"May\" : \n        this.dateNum = '05';\n        break;\n      case \"Jun\" : \n        this.dateNum = '06';\n        break;\n      case \"Jul\" : \n        this.dateNum = '07';\n        break;\n      case \"Aug\" : \n        this.dateNum = '08';\n        break;\n      case \"Sep\" : \n        this.dateNum = '09';\n        break;\n      case \"Oct\" : \n        this.dateNum = '10';\n        break;\n      case \"Nov\" : \n        this.dateNum = '11';\n        break;\n      case \"Dec\" : \n        this.dateNum = '12';\n        break;\n      default:\n        this.dateNum = '00';\n    }\n  }\n\n  logoutModal(logout){\n    this.modalService.open(logout, { centered: true });\n  }\n\n  clickLogout(){\n      this.authService.logOut();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Sale } from './sale';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaleService {\n\n  constructor(private http: HttpClient) { }\n\n  private url:String = \"https://tilah-system.herokuapp.com\";\n  private headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  getSales():Observable<any>{\n    return this.http.get<any>(\n      this.url + \"/sale\"\n    );\n  }\n\n  getSale(id):Observable<any>{\n    return this.http.get<any>(\n      this.url + \"/sale/\" + id\n    );\n  }\n\n\n  addSale(sale: Sale):Observable<any>{\n    return this.http.post<any>(\n      this.url + \"/sale\",\n      sale,\n      {headers: this.headers} \n    );\n  }\n\n  updateSale(sale: Sale, id):Observable<any>{\n    return this.http.put<any>(\n      this.url + \"/sale/\" + id,\n      sale,\n      {headers: this.headers}\n    );\n  }\n\n  deleteSale(id):Observable<any>{\n    return this.http.delete<any>(\n      this.url + \"/sale/\" + id\n    );\n  }\n}\n","export class Sale{\r\n    itemId: String;\r\n    quantity: number;\r\n    amount: number;\r\n    sold_by: String;\r\n    date: String;\r\n    dateNow: String;\r\n}","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Seed } from './seed';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeedService {\n\n  constructor(private http: HttpClient) { }\n\n  private url:String = \"https://tilah-system.herokuapp.com\";\n  public headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  getSeeds():Observable<any>{\n    return this.http.get<any>(\n      this.url + \"/seed\"\n    );\n  }\n\n  getSeed(id):Observable<any>{\n    return this.http.get<any>(\n      this.url + \"/seed/\" + id\n    );\n  }\n\n  addSeed(seed: Seed):Observable<any>{\n    return this.http.post<any>(\n      this.url + \"/seed\",\n      seed,\n      {headers: this.headers} \n    );\n  }\n\n  updateSeed(seed: Seed, id):Observable<any>{\n    return this.http.put<any>(\n      this.url + \"/seed/\" + id,\n      seed,\n      {headers: this.headers}\n    );\n  }\n\n  deleteSeed(id):Observable<any>{\n    return this.http.delete<any>(\n      this.url + \"/seed/\" + id\n    );\n  }\n}\n","import { User } from './user';\r\n\r\nexport class Seed{\r\n    _id: String;\r\n    name: String;\r\n    variety: String;\r\n    classification: String;\r\n    description: String;\r\n    number_of_days: Number;\r\n    stocks: number;\r\n    price: number;\r\n    updated_by: String;\r\n    updated_at: Date;\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlZWQvc2VlZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ChangeDetectorRef, ViewChild} from '@angular/core';\nimport {\n  ReactiveFormsModule,\n  FormsModule,\n  FormGroup,\n  FormControl,\n  Validators,\n  FormBuilder\n} from '@angular/forms'; \nimport { MdbTablePaginationComponent, MdbTableDirective } from 'angular-bootstrap-md';\n\nimport { Seed } from '../seed';\nimport { SeedService } from '../seed.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\nimport { Router } from '@angular/router';\nimport { History } from '../history';\nimport { HistoryService } from '../history.service';\nimport { HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-seed',\n  templateUrl: './seed.component.html',\n  styleUrls: ['./seed.component.css']\n})\nexport class SeedComponent implements OnInit {\n\n  elements: any = [];\n  previous: any = [];\n  headElements = ['Name', 'Variety', 'Classification', 'Days of Maturity', 'Stocks', ''];\n\n  private seeds: Seed[];\n  private list: Seed[];\n  private seed;\n\n  private variety = [\"inbred\", \"hybrid\"];\n  private classification = [\"long\", \"round\", \"medium\"];\n  private seedName:String;\n  private seed_variety:String;\n  private seed_classification:String;\n  private description:String;\n  private price: number;\n  private maturity:Number; \n  private stock:number;\n\n  private editName;\n  private editVariety;\n  private editClassification;\n  private editDesc;\n  private editPrice;\n  private editMaturity;\n  private editStock;\n\n  private users: User[];\n  private user: User[];\n  private id;\n  public index;\n\n  private name;\n  private username;\n\n  private action;\n  private role = true;\n\n  myform: FormGroup;\n  seedname: FormControl;\n  seedVariety: FormControl;\n  seedClassification: FormControl;\n  seedDescription: FormControl;\n  seedPrice: FormControl;\n  seedMaturity: FormControl;\n  seedStocks: FormControl;\n\n  constructor(private seedService: SeedService, \n    private userService: UserService, \n    private modalService: NgbModal,\n    private router: Router,\n    private cdRef: ChangeDetectorRef,\n    private historyService: HistoryService,\n    private authService: AuthService) { }\n\n  @ViewChild(MdbTablePaginationComponent, { static: true }) mdbTablePagination: MdbTablePaginationComponent;\n  @ViewChild(MdbTableDirective, { static: true }) mdbTable: MdbTableDirective;\n\n  ngOnInit() {\n    this.getSeeds();\n    this.createFormControls();\n    this.createForm();\n    this.userService.getUser(this.userService.currentUser).subscribe(\n      data => {\n        this.user = data;\n        if(this.user[0].role == \"admin\"){\n         this.role = false;\n        }\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n  }\n\n  ngAfterViewInit() {\n    this.mdbTablePagination.setMaxVisibleItemsNumberTo(5);\n\n    this.mdbTablePagination.calculateFirstItemIndex();\n    this.mdbTablePagination.calculateLastItemIndex();\n    this.cdRef.detectChanges();\n  }\n\n  getSeeds(){\n    this.seedService.getSeeds().subscribe(\n      data => {\n        this.seeds = data;\n        this.list = data;\n  \n        this.mdbTable.setDataSource(this.seeds);\n        this.seeds = this.mdbTable.getDataSource();\n        this.previous = this.mdbTable.getDataSource();\n  \n        this.mdbTablePagination.setMaxVisibleItemsNumberTo(5);\n  \n        this.mdbTablePagination.calculateFirstItemIndex();\n        this.mdbTablePagination.calculateLastItemIndex();\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n  }\n\n  createFormControls() {\n    this.seedname = new FormControl('', [Validators.required, Validators.pattern(\"[A-Za-z0-9\\s-]*\")]);\n    this.seedVariety = new FormControl('', Validators.required);\n    this.seedClassification = new FormControl('', Validators.required);\n    this.seedDescription = new FormControl('', [Validators.required, Validators.pattern(\"[^@#$*<>~`{}+=]*\")]);\n    this.seedPrice = new FormControl('', [Validators.required, Validators.pattern(\"[0-9.]*\")]);\n    this.seedMaturity = new FormControl('', [Validators.required, Validators.maxLength(3), Validators.minLength(2), Validators.pattern(\"[0-9]*\")]);\n    this.seedStocks = new FormControl('', [Validators.required, Validators.maxLength(3), Validators.pattern(\"[0-9]*\")]);\n  }\n\n  createForm() {\n    this.myform = new FormGroup({\n      seedname: this.seedname,\n      seedVariety: this.seedVariety,\n      seedClassification: this.seedClassification,\n      seedDescription: this.seedDescription,\n      seedPrice: this.seedPrice,\n      seedMaturity: this.seedMaturity,\n      seedStocks: this.seedStocks\n    });\n  }\n\n  addSeed(deletedModal){\n    var bool = true;\n\n    for(var i=0; i<this.seeds.length; i++){\n      if(this.seeds[i].name == this.seedName){\n        bool = false;\n      }\n    }\n\n    if(bool){\n      var seed = new Seed();\n      seed.name = this.seedName;\n      seed.variety = this.seed_variety;\n      seed.classification = this.seed_classification;\n      seed.description = this.description;\n      seed.price = this.price;\n      seed.number_of_days = this.maturity;\n      seed.stocks = this.stock;\n      seed.updated_by = this.userService.currentUser;\n\n      this.seedService.addSeed(seed).subscribe(\n        data => {\n          this.getSeeds();\n          this.addHistory(seed.name, \"Added\");\n        },\n        err => {\n          if(err instanceof HttpErrorResponse){\n            if(err.status === 401){\n              this.router.navigate(['/login']);\n            }\n          }\n        }\n      );\n      \n      this.myform.reset();\n      this.modalService.dismissAll();\n      this.deletedModal(deletedModal, \"add\");\n    }\n    else{\n      this.deletedModal(deletedModal, \"exist\");\n    }\n  }\n\n  editSeed(deletedModal){\n    var bool = true;\n\n    for(var i=0; i<this.seeds.length; i++){\n      if(this.seeds[i].name == this.seedName){\n        bool = false;\n      }\n    }\n\n    if(bool){\n      var seed = new Seed();\n      seed.name = this.editName;\n      seed.variety = this.editVariety;\n      seed.classification = this.editClassification;\n      seed.description = this.editDesc;\n      seed.price = this.editPrice;\n      seed.number_of_days = this.editMaturity;\n      seed.stocks = this.editStock;\n      seed.updated_by = this.userService.currentUser;\n    \n      this.seedService.updateSeed(seed, this.id).subscribe(\n        data => {\n          this.getSeeds();\n          this.addHistory(seed.name, \"Updated\");\n        },\n        err => {\n          if(err instanceof HttpErrorResponse){\n            if(err.status === 401){\n              this.router.navigate(['/login']);\n            }\n          }\n        }\n      );\n\n      this.myform.reset();\n      this.modalService.dismissAll();\n      this.deletedModal(deletedModal, \"update\");\n    }\n    else{\n      this.deletedModal(deletedModal, \"exist\");\n    }\n  }\n\n  deleteSeed(deletedModal){\n    var seedname\n    for(var i=0; i<this.seeds.length; i++){\n      if(this.id == this.seeds[i]._id){\n        seedname = this.seeds[i].name;\n      }\n    }\n\n    var histo = new History();\n      histo.seed = seedname;\n      histo.userID = this.user[0]._id;\n      histo.user = this.user[0].name;\n      histo.action = \"Deleted\";\n\n    this.historyService.addHistory(histo).subscribe(\n      data => {\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n\n    this.seedService.deleteSeed(this.id).subscribe(\n      data => {\n        this.getSeeds();\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n    \n    this.modalService.dismissAll();\n    this.deletedModal(deletedModal, \"delete\");\n  }\n\n  viewSeedModal(viewseed, id, index) {\n    this.id = id;\n    this.index = index;\n    this.seedService.getSeed(id).subscribe((data)=>{\n      this.seed = data;\n      this,this.getSeeds();\n    })\n    \n    this.modalService.open(viewseed, { centered: true });\n  }\n\n  addSeedModal(addseed, name, username) {\n    this.modalService.open(addseed, { centered: true });\n    this.name = name;\n    this.username = username;\n  }\n\n  editSeedModal(editseed, id, index) {\n    this.id = id;\n    this.seedService.getSeed(id).subscribe(\n      data => {\n        this.seeds = data;\n        this.getSeeds();\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n    \n    this.editName = this.seeds[index].name;\n    this.editVariety = this.seeds[index].variety;\n    this.editClassification = this.seeds[index].classification;\n    this.editDesc = this.seeds[index].description;\n    this.editMaturity = this.seeds[index].number_of_days;\n    this.editStock = this.seeds[index].stocks;\n    this.editPrice = this.seeds[index].price;\n    this.modalService.open(editseed, { centered: true });\n  }\n\n  deleteModal(del, id){\n    this.id = id;\n    this.modalService.open(del, { centered: true });\n  }\n\n  deletedModal(deletedModal, action){\n    this.modalService.open(deletedModal, { centered: true });\n    this.action = action;\n  }\n\n  logoutModal(logout){\n    this.modalService.open(logout, { centered: true });\n  }\n\n  clickLogout(){\n      this.authService.logOut();\n  }\n\n  addHistory(seedname, action){\n    var histo = new History();\n    histo.seed = seedname;\n    histo.userID = this.user[0]._id;\n    histo.user = this.user[0].name;\n    histo.action = action;\n\n    this.historyService.addHistory(histo).subscribe(\n      data => {\n        this.getSeeds();\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor{\n\n  constructor(private injector: Injector) { }\n\n  intercept(req, next){\n    let authService = this.injector.get(AuthService)\n    let tokenizedReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${authService.getToken()}` \n      }\n    })\n    return next.handle(tokenizedReq)\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  currentUser;\n\n    private url:String = \"https://tilah-system.herokuapp.com\";\n    private headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n    getUsers():Observable<any>{\n      return this.http.get<any>(\n        this.url + \"/user\"\n      );\n    }\n\n    getUser(id):Observable<any>{\n      return this.http.get<any>(\n        this.url + \"/user/\" + id\n      );\n    }\n\n    addUser(user):Observable<any>{\n      return this.http.post<any>(\n        this.url + \"/user\",\n        user,\n        {headers: this.headers}\n      );\n    }\n\n    updateUser(user: User, id):Observable<any>{\n      return this.http.put<any>(\n        this.url + \"/user/\" + id,\n        user,\n        {headers: this.headers}\n      );\n    }\n\n    deleteUser(id):Observable<any>{\n      return this.http.delete<any>(\n        this.url + \"/user/\" + id\n      );\n    }\n}\n","export class User{\r\n    _id;\r\n    username: String;\r\n    password: String;\r\n    name: String;\r\n    role;\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport {\n  ReactiveFormsModule,\n  FormsModule,\n  FormGroup,\n  FormControl,\n  Validators,\n  FormBuilder\n} from '@angular/forms';\nimport { MdbTablePaginationComponent, MdbTableDirective } from 'angular-bootstrap-md';\n\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\nimport { Router } from '@angular/router';\nimport { HistoryService } from '../history.service';\nimport { AuthService } from '../auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  elements: any = [];\n  previous: any = [];\n  headElements = ['Name', 'Username', ''];\n\n  private users: User[];\n  private user;\n  private list: User[];\n\n  private name:String;\n  private username:String;\n  private addRole: String;\n  private passWord:String;\n  private confirmPassWord;\n\n  private editName;\n  private editUserName;\n  private editRole;\n  private editPassword;\n  private editConfirmPassword;\n\n  private action;\n  public index;\n\n  myform: FormGroup;\n  fullName: FormControl;\n  userName: FormControl;\n  userRole: FormControl;\n  userPassword: FormControl;\n  confirmPassword: FormControl;\n\n  constructor(private userService: UserService, \n              private modalService: NgbModal,\n              private router: Router,\n              private cdRef: ChangeDetectorRef,\n              private logService: HistoryService,\n              private authService: AuthService) { }\n\n  @ViewChild(MdbTablePaginationComponent, { static: true }) mdbTablePagination: MdbTablePaginationComponent;\n  @ViewChild(MdbTableDirective, { static: true }) mdbTable: MdbTableDirective;           \n \n  ngOnInit() {\n    this.getUsers();\n    this.createFormControls();\n    this.createForm();\n  }\n\n  ngAfterViewInit() {\n    this.mdbTablePagination.setMaxVisibleItemsNumberTo(5);\n\n    this.mdbTablePagination.calculateFirstItemIndex();\n    this.mdbTablePagination.calculateLastItemIndex();\n    this.cdRef.detectChanges();\n  }\n\n  getUsers(){\n    this.userService.getUsers().subscribe(\n      data => {\n        this.users = data;\n        this.list = data;\n\n        this.mdbTable.setDataSource(this.list);\n        this.list = this.mdbTable.getDataSource();\n        this.previous = this.mdbTable.getDataSource();\n\n        this.mdbTablePagination.setMaxVisibleItemsNumberTo(5);\n\n        this.mdbTablePagination.calculateFirstItemIndex();\n        this.mdbTablePagination.calculateLastItemIndex();\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n  }\n\n  createFormControls() {\n    this.fullName = new FormControl('', [Validators.required, Validators.pattern(\"[^!@#$~%^*()?/{}|\\]*\")]);\n    this.userName = new FormControl('', [Validators.required, Validators.pattern(\"[A-Za-z0-9\\s.@#!&*-_/]*\")]);\n    this.userRole = new FormControl('', [Validators.required, Validators.pattern(\"[A-Za-z]*\")]);\n    this.userPassword = new FormControl('', [Validators.required, Validators.pattern(\"[A-Za-z0-9.@#!&*-_/]*\"), Validators.minLength(6)]);\n    this.confirmPassword = new FormControl('', [Validators.required, Validators.pattern(\"[A-Za-z0-9.@#!&*-_/]*\"), Validators.minLength(6)]);\n  }\n\n  createForm() {\n    this.myform = new FormGroup({\n      fullName: this.fullName,\n      userName: this.userName,\n      userRole: this.userRole,\n      userPassword: this.userPassword,\n      confirmPassword: this.confirmPassword\n    });\n  }\n\n  addUser(deletedModal){\n    var i;\n    var ctr=true;\n    for( i=0; i<this.users.length; i++){\n      if(this.users[i].username == this.username ){\n        ctr = false;\n      }\n    }\n    if(ctr){\n      var user = new User();\n      user.name = this.name;\n      user.username = this.username;\n      user.role = this.addRole;\n      user.password = this.passWord;\n\n      this.userService.addUser(user).subscribe((data) => {\n        this.getUsers();\n        alert('added');\n      });\n    }\n    else{\n      alert(\"Username already Exists!\")\n    }\n\n    this.myform.reset();\n    this.modalService.dismissAll();\n    this.deletedModal(deletedModal, \"add\");\n  }\n\n  private id\n\n  editUser(deletedModal){\n    var user = new User();\n    user.name = this.editName;\n    user.username = this.editUserName;\n    user.role = this.editRole;\n    user.password = this.editPassword;\n\n   \n    this.userService.updateUser(user, this.id).subscribe(\n      data => {\n        this.getUsers();\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n    this.myform.reset();\n    this.modalService.dismissAll();\n    this.deletedModal(deletedModal, \"update\");\n  }\n\n  deleteUser(deletedModal){\n    this.userService.deleteUser(this.id).subscribe(\n      data => {\n        this.getUsers()\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n    \n    this.modalService.dismissAll();\n    this.deletedModal(deletedModal, \"delete\");\n  }\n\n  viewUserModal(viewuser, id, index) {\n    this.id = id;\n    this.index = index;\n    this.userService.getUser(id).subscribe(\n      data => {\n        this.user = data;\n        this.getUsers();\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n    \n    this.modalService.open(viewuser, { centered: true });\n  }\n\n  addUserModal(adduser) {\n    this.modalService.open(adduser, { centered: true });\n  }\n\n  editUserModal(edituser, id, index) {\n    this.id=id;\n    this.userService.getUser(id).subscribe(\n      data => {\n        this.user = data;\n        this.getUsers();\n\n        for(var i=0; i<this.user.length; i++){\n          this.editName = this.user[i].name;\n          this.editUserName = this.user[i].username;\n          this.editRole = this.user[i].role;\n          this.editPassword = this.user[i].password;\n          this.editConfirmPassword = \"\";\n        }\n      },\n      err => {\n        if(err instanceof HttpErrorResponse){\n          if(err.status === 401){\n            this.router.navigate(['/login']);\n          }\n        }\n      }\n    );\n    \n    this.modalService.open(edituser, { centered: true });\n  }\n\n  deleteModal(del, id){\n    this.id = id;\n    this.modalService.open(del, { centered: true });\n  }\n\n  deletedModal(deletedModal, action){\n    this.modalService.open(deletedModal, { centered: true });\n    this.action = action;\n  }\n\n  logoutModal(logout){\n    this.modalService.open(logout, { centered: true });\n  }\n\n  clickLogout(){\n      this.authService.logOut();\n  }\n\n  clickHistory(id){\n    this.logService.userId = id;\n    this.router.navigate(['/logs']);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}